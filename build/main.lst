ARM GAS  /tmp/ccXnUfbb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB76:
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include "FreeRTOS.h"
   3:Core/Src/main.c **** #include "check_keys.h"
   4:Core/Src/main.c **** #include "cmsis_os.h"
   5:Core/Src/main.c **** #include "left.h"
   6:Core/Src/main.c **** #include "rigth.h"
   7:Core/Src/main.c **** #include "ssd1306.h"
   8:Core/Src/main.c **** #include "stm32f1xx_hal.h"
   9:Core/Src/main.c **** #include "task.h"
  10:Core/Src/main.c **** #include "usb_device.h"
  11:Core/Src/main.c **** #include "usb_send.h"
  12:Core/Src/main.c **** #include "usbd_def.h"
  13:Core/Src/main.c **** #include "usbd_hid.h"
  14:Core/Src/main.c **** /* #include "MCP23017.h" */
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** /* USER CODE BEGIN Header */
  17:Core/Src/main.c **** /**
  18:Core/Src/main.c ****  ******************************************************************************
  19:Core/Src/main.c ****  * @file           : main.c
  20:Core/Src/main.c ****  * @brief          : Main program body
  21:Core/Src/main.c ****  ******************************************************************************
  22:Core/Src/main.c ****  * @attention
  23:Core/Src/main.c ****  *
  24:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  25:Core/Src/main.c ****  * All rights reserved.
  26:Core/Src/main.c ****  *
  27:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  28:Core/Src/main.c ****  * in the root directory of this software component.
  29:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  30:Core/Src/main.c ****  *
  31:Core/Src/main.c ****  ******************************************************************************
  32:Core/Src/main.c ****  */
  33:Core/Src/main.c **** /* USER CODE END Header */
ARM GAS  /tmp/ccXnUfbb.s 			page 2


  34:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  35:Core/Src/main.c **** /* #include "main.h" */
  36:Core/Src/main.c **** /* #include "cmsis_os.h" */
  37:Core/Src/main.c **** /* #include "usb_device.h" */
  38:Core/Src/main.c **** /* #include "usbd_def.h" */
  39:Core/Src/main.c **** /* #include "FreeRTOS.h" */
  40:Core/Src/main.c **** /* #include "task.h" */
  41:Core/Src/main.c **** /* #include "check_keys.h" */
  42:Core/Src/main.c **** /* #include "usb_send.h" */
  43:Core/Src/main.c **** /* #include "usbd_hid.h" */
  44:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END Includes */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PTD */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PD */
  56:Core/Src/main.c **** /* USER CODE END PD */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN PM */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PM */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  64:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Definitions for defaultTask */
  67:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  68:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  69:Core/Src/main.c ****     .name = "defaultTask",
  70:Core/Src/main.c ****     .stack_size = 128 * 4,
  71:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  72:Core/Src/main.c **** };
  73:Core/Src/main.c **** /* USER CODE BEGIN PV */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/main.c **** void SystemClock_Config(void);
  79:Core/Src/main.c **** static void MX_GPIO_Init(void);
  80:Core/Src/main.c **** static void MX_I2C1_Init(void);
  81:Core/Src/main.c **** void StartDefaultTask(void *argument);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PFP */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  88:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
ARM GAS  /tmp/ccXnUfbb.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** typedef struct {
  93:Core/Src/main.c ****   uint8_t MODIFIER;
  94:Core/Src/main.c ****   uint8_t RESERVED;
  95:Core/Src/main.c ****   uint8_t KEYCODE0;
  96:Core/Src/main.c ****   uint8_t KEYCODE1;
  97:Core/Src/main.c ****   uint8_t KEYCODE2;
  98:Core/Src/main.c ****   uint8_t KEYCODE3;
  99:Core/Src/main.c ****   uint8_t KEYCODE4;
 100:Core/Src/main.c ****   uint8_t KEYCODE5;
 101:Core/Src/main.c **** } keyboardBuffer;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* extern QueueHandle_t usb_send_queue; */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** keyboardBuffer buffer = {0, 0, 0, 0, 0, 0, 0, 0};
 106:Core/Src/main.c **** keyboard_command_t keyboar_commands;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 111:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* USER CODE END 0 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****  * @brief  The application entry point.
 117:Core/Src/main.c ****  * @retval int
 118:Core/Src/main.c ****  */
 119:Core/Src/main.c **** void test_task(void *vparams) {
 120:Core/Src/main.c ****   while (1) {
 121:Core/Src/main.c ****     buffer.KEYCODE0 = 0x11;
 122:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 123:Core/Src/main.c ****     HAL_Delay(50);
 124:Core/Src/main.c ****     buffer.KEYCODE0 = 0x00;
 125:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 126:Core/Src/main.c ****     HAL_Delay(4000);
 127:Core/Src/main.c ****   }
 128:Core/Src/main.c **** }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /* USER CODE END 0 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /**
 133:Core/Src/main.c ****  * @brief  The application entry point.
 134:Core/Src/main.c ****  * @retval int
 135:Core/Src/main.c ****  */
 136:Core/Src/main.c **** int main(void) {
 137:Core/Src/main.c ****   // Initialization
 138:Core/Src/main.c ****   HAL_Init();
 139:Core/Src/main.c ****   SystemClock_Config();
 140:Core/Src/main.c ****   MX_GPIO_Init();
 141:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 142:Core/Src/main.c ****   MX_I2C1_Init();
 143:Core/Src/main.c ****   ssd1306_Init();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   osKernelInitialize();
 146:Core/Src/main.c ****   check_keys_task_init();
 147:Core/Src/main.c ****   usb_send_task_init();
ARM GAS  /tmp/ccXnUfbb.s 			page 4


 148:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL,
 149:Core/Src/main.c ****    * &defaultTask_attributes); */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 152:Core/Src/main.c ****   /* xTaskCreate(&test_task, "Test_task", 100, NULL, 5, NULL); */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   osKernelStart();
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   while (1) {
 157:Core/Src/main.c ****     /* USER CODE END WHILE */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   /* USER CODE END 3 */
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /**
 165:Core/Src/main.c ****  * @brief System Clock Configuration
 166:Core/Src/main.c ****  * @retval None
 167:Core/Src/main.c ****  */
 168:Core/Src/main.c **** void SystemClock_Config(void) {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 174:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 175:Core/Src/main.c ****    */
 176:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 179:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 183:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****    */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 190:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 200:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 201:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** }
ARM GAS  /tmp/ccXnUfbb.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /**
 207:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 208:Core/Src/main.c ****  * @param None
 209:Core/Src/main.c ****  * @retval None
 210:Core/Src/main.c ****  */
 211:Core/Src/main.c **** static void MX_I2C1_Init(void) {
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 220:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 221:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 222:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 223:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 224:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 225:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 226:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 227:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 228:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 229:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****  * @brief GPIO Initialization Function
 239:Core/Src/main.c ****  * @param None
 240:Core/Src/main.c ****  * @retval None
 241:Core/Src/main.c ****  */
 242:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 242 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 243:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 243 3 view .LVU1
  40              		.loc 1 243 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/ccXnUfbb.s 			page 6


  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 246 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 246 3 view .LVU4
  49              		.loc 1 246 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 246 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 246 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 246 3 view .LVU8
 247:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 247 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 247 3 view .LVU10
  65              		.loc 1 247 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 247 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F00402 		and	r2, r2, #4
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 247 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 247 3 view .LVU14
 248:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 248 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 248 3 view .LVU16
  80              		.loc 1 248 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 248 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00803 		and	r3, r3, #8
  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 248 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 248 3 view .LVU20
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 251:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB,
  92              		.loc 1 251 3 view .LVU21
ARM GAS  /tmp/ccXnUfbb.s 			page 7


  93 0046 104D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF21801 		movw	r1, #61464
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 252:Core/Src/main.c ****                     Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin |
 253:Core/Src/main.c ****                         Col_5_Pin,
 254:Core/Src/main.c ****                     GPIO_PIN_RESET);
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /*Configure GPIO pins : Row_0_Pin Row_1_Pin Row_2_Pin Row_3_Pin
 257:Core/Src/main.c ****                            Row_4_Pin */
 258:Core/Src/main.c ****   GPIO_InitStruct.Pin =
  99              		.loc 1 258 3 view .LVU22
 100              		.loc 1 258 23 is_stmt 0 view .LVU23
 101 0054 48F20333 		movw	r3, #33539
 102 0058 0493     		str	r3, [sp, #16]
 259:Core/Src/main.c ****       Row_0_Pin | Row_1_Pin | Row_2_Pin | Row_3_Pin | Row_4_Pin;
 260:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 103              		.loc 1 260 3 is_stmt 1 view .LVU24
 104              		.loc 1 260 24 is_stmt 0 view .LVU25
 105 005a 0594     		str	r4, [sp, #20]
 261:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 106              		.loc 1 261 3 is_stmt 1 view .LVU26
 107              		.loc 1 261 24 is_stmt 0 view .LVU27
 108 005c 0223     		movs	r3, #2
 109 005e 0693     		str	r3, [sp, #24]
 262:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 110              		.loc 1 262 3 is_stmt 1 view .LVU28
 111 0060 04A9     		add	r1, sp, #16
 112 0062 0A48     		ldr	r0, .L3+8
 113 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL1:
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /*Configure GPIO pins : Col_0_Pin Col_1_Pin Col_2_Pin Col_3_Pin
 265:Core/Src/main.c ****                            Col_4_Pin Col_5_Pin */
 266:Core/Src/main.c ****   GPIO_InitStruct.Pin =
 115              		.loc 1 266 3 view .LVU29
 116              		.loc 1 266 23 is_stmt 0 view .LVU30
 117 0068 4FF21803 		movw	r3, #61464
 118 006c 0493     		str	r3, [sp, #16]
 267:Core/Src/main.c ****       Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin | Col_5_Pin;
 268:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 268 3 is_stmt 1 view .LVU31
 120              		.loc 1 268 24 is_stmt 0 view .LVU32
 121 006e 0123     		movs	r3, #1
 122 0070 0593     		str	r3, [sp, #20]
 269:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 269 3 is_stmt 1 view .LVU33
 124              		.loc 1 269 24 is_stmt 0 view .LVU34
 125 0072 0694     		str	r4, [sp, #24]
 270:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 126              		.loc 1 270 3 is_stmt 1 view .LVU35
 127              		.loc 1 270 25 is_stmt 0 view .LVU36
 128 0074 0323     		movs	r3, #3
 129 0076 0793     		str	r3, [sp, #28]
 271:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccXnUfbb.s 			page 8


 130              		.loc 1 271 3 is_stmt 1 view .LVU37
 131 0078 04A9     		add	r1, sp, #16
 132 007a 2846     		mov	r0, r5
 133 007c FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL2:
 272:Core/Src/main.c **** }
 135              		.loc 1 272 1 is_stmt 0 view .LVU38
 136 0080 09B0     		add	sp, sp, #36
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 0082 30BD     		pop	{r4, r5, pc}
 141              	.L4:
 142              		.align	2
 143              	.L3:
 144 0084 00100240 		.word	1073876992
 145 0088 000C0140 		.word	1073810432
 146 008c 00080140 		.word	1073809408
 147              		.cfi_endproc
 148              	.LFE76:
 150              		.section	.text.test_task,"ax",%progbits
 151              		.align	1
 152              		.global	test_task
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	test_task:
 158              	.LFB72:
 119:Core/Src/main.c ****   while (1) {
 159              		.loc 1 119 31 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ Volatile: function does not return.
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL3:
 119:Core/Src/main.c ****   while (1) {
 165              		.loc 1 119 31 is_stmt 0 view .LVU40
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 171              	.LVL4:
 172              	.L6:
 120:Core/Src/main.c ****     buffer.KEYCODE0 = 0x11;
 173              		.loc 1 120 3 is_stmt 1 discriminator 1 view .LVU41
 121:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 174              		.loc 1 121 5 discriminator 1 view .LVU42
 121:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 175              		.loc 1 121 21 is_stmt 0 discriminator 1 view .LVU43
 176 0002 0C4C     		ldr	r4, .L8
 177 0004 1123     		movs	r3, #17
 178 0006 A370     		strb	r3, [r4, #2]
 122:Core/Src/main.c ****     HAL_Delay(50);
 179              		.loc 1 122 5 is_stmt 1 discriminator 1 view .LVU44
 180 0008 0B4D     		ldr	r5, .L8+4
 181 000a 0822     		movs	r2, #8
ARM GAS  /tmp/ccXnUfbb.s 			page 9


 182 000c 2146     		mov	r1, r4
 183 000e 2846     		mov	r0, r5
 184 0010 FFF7FEFF 		bl	USBD_HID_SendReport
 185              	.LVL5:
 123:Core/Src/main.c ****     buffer.KEYCODE0 = 0x00;
 186              		.loc 1 123 5 discriminator 1 view .LVU45
 187 0014 3220     		movs	r0, #50
 188 0016 FFF7FEFF 		bl	HAL_Delay
 189              	.LVL6:
 124:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 190              		.loc 1 124 5 discriminator 1 view .LVU46
 124:Core/Src/main.c ****     USBD_HID_SendReport(&hUsbDeviceFS, &buffer, sizeof(keyboardBuffer));
 191              		.loc 1 124 21 is_stmt 0 discriminator 1 view .LVU47
 192 001a 0023     		movs	r3, #0
 193 001c A370     		strb	r3, [r4, #2]
 125:Core/Src/main.c ****     HAL_Delay(4000);
 194              		.loc 1 125 5 is_stmt 1 discriminator 1 view .LVU48
 195 001e 0822     		movs	r2, #8
 196 0020 2146     		mov	r1, r4
 197 0022 2846     		mov	r0, r5
 198 0024 FFF7FEFF 		bl	USBD_HID_SendReport
 199              	.LVL7:
 126:Core/Src/main.c ****   }
 200              		.loc 1 126 5 discriminator 1 view .LVU49
 201 0028 4FF47A60 		mov	r0, #4000
 202 002c FFF7FEFF 		bl	HAL_Delay
 203              	.LVL8:
 120:Core/Src/main.c ****     buffer.KEYCODE0 = 0x11;
 204              		.loc 1 120 9 discriminator 1 view .LVU50
 205 0030 E7E7     		b	.L6
 206              	.L9:
 207 0032 00BF     		.align	2
 208              	.L8:
 209 0034 00000000 		.word	buffer
 210 0038 00000000 		.word	hUsbDeviceFS
 211              		.cfi_endproc
 212              	.LFE72:
 214              		.section	.text.StartDefaultTask,"ax",%progbits
 215              		.align	1
 216              		.global	StartDefaultTask
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	StartDefaultTask:
 222              	.LVL9:
 223              	.LFB77:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** /* USER CODE END 4 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****  * @brief  Function implementing the defaultTask thread.
 281:Core/Src/main.c ****  * @param  argument: Not used
 282:Core/Src/main.c ****  * @retval None
 283:Core/Src/main.c ****  */
ARM GAS  /tmp/ccXnUfbb.s 			page 10


 284:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 285:Core/Src/main.c **** void StartDefaultTask(void *argument) {
 224              		.loc 1 285 39 view -0
 225              		.cfi_startproc
 226              		@ Volatile: function does not return.
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		.loc 1 285 39 is_stmt 0 view .LVU52
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 286:Core/Src/main.c ****   /* init code for USB_DEVICE */
 287:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 235              		.loc 1 287 3 is_stmt 1 view .LVU53
 236 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 237              	.LVL10:
 238              	.L11:
 288:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 289:Core/Src/main.c ****   /* Infinite loop */
 290:Core/Src/main.c ****   for (;;) {
 239              		.loc 1 290 3 discriminator 1 view .LVU54
 291:Core/Src/main.c ****     osDelay(1);
 240              		.loc 1 291 5 discriminator 1 view .LVU55
 241 0006 0120     		movs	r0, #1
 242 0008 FFF7FEFF 		bl	osDelay
 243              	.LVL11:
 290:Core/Src/main.c ****     osDelay(1);
 244              		.loc 1 290 3 discriminator 1 view .LVU56
 245 000c FBE7     		b	.L11
 246              		.cfi_endproc
 247              	.LFE77:
 249              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 250              		.align	1
 251              		.global	HAL_TIM_PeriodElapsedCallback
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	HAL_TIM_PeriodElapsedCallback:
 257              	.LVL12:
 258              	.LFB78:
 292:Core/Src/main.c ****   }
 293:Core/Src/main.c ****   /* USER CODE END 5 */
 294:Core/Src/main.c **** }
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** /**
 297:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 298:Core/Src/main.c ****  * @note   This function is called  when TIM2 interrupt took place, inside
 299:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 300:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 301:Core/Src/main.c ****  * @param  htim : TIM handle
 302:Core/Src/main.c ****  * @retval None
 303:Core/Src/main.c ****  */
 304:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 259              		.loc 1 304 61 view -0
 260              		.cfi_startproc
ARM GAS  /tmp/ccXnUfbb.s 			page 11


 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		.loc 1 304 61 is_stmt 0 view .LVU58
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI5:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 305:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 308:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 269              		.loc 1 308 3 is_stmt 1 view .LVU59
 270              		.loc 1 308 11 is_stmt 0 view .LVU60
 271 0002 0368     		ldr	r3, [r0]
 272              		.loc 1 308 6 view .LVU61
 273 0004 B3F1804F 		cmp	r3, #1073741824
 274 0008 00D0     		beq	.L16
 275              	.LVL13:
 276              	.L13:
 309:Core/Src/main.c ****     HAL_IncTick();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 314:Core/Src/main.c **** }
 277              		.loc 1 314 1 view .LVU62
 278 000a 08BD     		pop	{r3, pc}
 279              	.LVL14:
 280              	.L16:
 309:Core/Src/main.c ****     HAL_IncTick();
 281              		.loc 1 309 5 is_stmt 1 view .LVU63
 282 000c FFF7FEFF 		bl	HAL_IncTick
 283              	.LVL15:
 284              		.loc 1 314 1 is_stmt 0 view .LVU64
 285 0010 FBE7     		b	.L13
 286              		.cfi_endproc
 287              	.LFE78:
 289              		.section	.text.Error_Handler,"ax",%progbits
 290              		.align	1
 291              		.global	Error_Handler
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 296              	Error_Handler:
 297              	.LFB79:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /**
 317:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 318:Core/Src/main.c ****  * @retval None
 319:Core/Src/main.c ****  */
 320:Core/Src/main.c **** void Error_Handler(void) {
 298              		.loc 1 320 26 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ Volatile: function does not return.
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXnUfbb.s 			page 12


 303              		@ link register save eliminated.
 321:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 322:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 323:Core/Src/main.c ****   __disable_irq();
 304              		.loc 1 323 3 view .LVU66
 305              	.LBB7:
 306              	.LBI7:
 307              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /tmp/ccXnUfbb.s 			page 13


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /tmp/ccXnUfbb.s 			page 14


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 308              		.loc 2 140 27 view .LVU67
 309              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 310              		.loc 2 142 3 view .LVU68
 311              		.syntax unified
 312              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 313 0000 72B6     		cpsid i
 314              	@ 0 "" 2
 315              		.thumb
 316              		.syntax unified
 317              	.L18:
 318              	.LBE8:
 319              	.LBE7:
 324:Core/Src/main.c ****   while (1) {
 320              		.loc 1 324 3 discriminator 1 view .LVU69
 325:Core/Src/main.c ****   }
 321              		.loc 1 325 3 discriminator 1 view .LVU70
 324:Core/Src/main.c ****   while (1) {
 322              		.loc 1 324 9 discriminator 1 view .LVU71
 323 0002 FEE7     		b	.L18
 324              		.cfi_endproc
 325              	.LFE79:
ARM GAS  /tmp/ccXnUfbb.s 			page 15


 327              		.section	.text.MX_I2C1_Init,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	MX_I2C1_Init:
 334              	.LFB75:
 211:Core/Src/main.c **** 
 335              		.loc 1 211 32 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              	.LCFI6:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
 220:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 344              		.loc 1 220 3 view .LVU73
 220:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 345              		.loc 1 220 18 is_stmt 0 view .LVU74
 346 0002 0A48     		ldr	r0, .L23
 347 0004 0A4B     		ldr	r3, .L23+4
 348 0006 0360     		str	r3, [r0]
 221:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 349              		.loc 1 221 3 is_stmt 1 view .LVU75
 221:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 350              		.loc 1 221 25 is_stmt 0 view .LVU76
 351 0008 0A4B     		ldr	r3, .L23+8
 352 000a 4360     		str	r3, [r0, #4]
 222:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 353              		.loc 1 222 3 is_stmt 1 view .LVU77
 222:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 354              		.loc 1 222 24 is_stmt 0 view .LVU78
 355 000c 0023     		movs	r3, #0
 356 000e 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 357              		.loc 1 223 3 is_stmt 1 view .LVU79
 223:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 358              		.loc 1 223 26 is_stmt 0 view .LVU80
 359 0010 C360     		str	r3, [r0, #12]
 224:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 360              		.loc 1 224 3 is_stmt 1 view .LVU81
 224:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 361              		.loc 1 224 29 is_stmt 0 view .LVU82
 362 0012 4FF48042 		mov	r2, #16384
 363 0016 0261     		str	r2, [r0, #16]
 225:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 364              		.loc 1 225 3 is_stmt 1 view .LVU83
 225:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 365              		.loc 1 225 30 is_stmt 0 view .LVU84
 366 0018 4361     		str	r3, [r0, #20]
 226:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 367              		.loc 1 226 3 is_stmt 1 view .LVU85
 226:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 368              		.loc 1 226 26 is_stmt 0 view .LVU86
 369 001a 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/ccXnUfbb.s 			page 16


 227:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 370              		.loc 1 227 3 is_stmt 1 view .LVU87
 227:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 371              		.loc 1 227 30 is_stmt 0 view .LVU88
 372 001c C361     		str	r3, [r0, #28]
 228:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 373              		.loc 1 228 3 is_stmt 1 view .LVU89
 228:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 374              		.loc 1 228 28 is_stmt 0 view .LVU90
 375 001e 0362     		str	r3, [r0, #32]
 229:Core/Src/main.c ****     Error_Handler();
 376              		.loc 1 229 3 is_stmt 1 view .LVU91
 229:Core/Src/main.c ****     Error_Handler();
 377              		.loc 1 229 7 is_stmt 0 view .LVU92
 378 0020 FFF7FEFF 		bl	HAL_I2C_Init
 379              	.LVL16:
 229:Core/Src/main.c ****     Error_Handler();
 380              		.loc 1 229 6 view .LVU93
 381 0024 00B9     		cbnz	r0, .L22
 235:Core/Src/main.c **** 
 382              		.loc 1 235 1 view .LVU94
 383 0026 08BD     		pop	{r3, pc}
 384              	.L22:
 230:Core/Src/main.c ****   }
 385              		.loc 1 230 5 is_stmt 1 view .LVU95
 386 0028 FFF7FEFF 		bl	Error_Handler
 387              	.LVL17:
 388              	.L24:
 389              		.align	2
 390              	.L23:
 391 002c 00000000 		.word	hi2c1
 392 0030 00540040 		.word	1073763328
 393 0034 801A0600 		.word	400000
 394              		.cfi_endproc
 395              	.LFE75:
 397              		.section	.text.SystemClock_Config,"ax",%progbits
 398              		.align	1
 399              		.global	SystemClock_Config
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	SystemClock_Config:
 405              	.LFB74:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 406              		.loc 1 168 31 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 80
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 00B5     		push	{lr}
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 14, -4
 414 0002 95B0     		sub	sp, sp, #84
 415              	.LCFI8:
 416              		.cfi_def_cfa_offset 88
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 417              		.loc 1 169 3 view .LVU97
ARM GAS  /tmp/ccXnUfbb.s 			page 17


 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 418              		.loc 1 169 22 is_stmt 0 view .LVU98
 419 0004 2822     		movs	r2, #40
 420 0006 0021     		movs	r1, #0
 421 0008 0DEB0200 		add	r0, sp, r2
 422 000c FFF7FEFF 		bl	memset
 423              	.LVL18:
 170:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 424              		.loc 1 170 3 is_stmt 1 view .LVU99
 170:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 425              		.loc 1 170 22 is_stmt 0 view .LVU100
 426 0010 0023     		movs	r3, #0
 427 0012 0593     		str	r3, [sp, #20]
 428 0014 0693     		str	r3, [sp, #24]
 429 0016 0793     		str	r3, [sp, #28]
 430 0018 0893     		str	r3, [sp, #32]
 431 001a 0993     		str	r3, [sp, #36]
 171:Core/Src/main.c **** 
 432              		.loc 1 171 3 is_stmt 1 view .LVU101
 171:Core/Src/main.c **** 
 433              		.loc 1 171 28 is_stmt 0 view .LVU102
 434 001c 0193     		str	r3, [sp, #4]
 435 001e 0293     		str	r3, [sp, #8]
 436 0020 0393     		str	r3, [sp, #12]
 437 0022 0493     		str	r3, [sp, #16]
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 438              		.loc 1 176 3 is_stmt 1 view .LVU103
 176:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 439              		.loc 1 176 36 is_stmt 0 view .LVU104
 440 0024 0122     		movs	r2, #1
 441 0026 0A92     		str	r2, [sp, #40]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 442              		.loc 1 177 3 is_stmt 1 view .LVU105
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 443              		.loc 1 177 30 is_stmt 0 view .LVU106
 444 0028 4FF48033 		mov	r3, #65536
 445 002c 0B93     		str	r3, [sp, #44]
 178:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 446              		.loc 1 178 3 is_stmt 1 view .LVU107
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 447              		.loc 1 179 3 view .LVU108
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 448              		.loc 1 179 30 is_stmt 0 view .LVU109
 449 002e 0E92     		str	r2, [sp, #56]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 450              		.loc 1 180 3 is_stmt 1 view .LVU110
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 451              		.loc 1 180 34 is_stmt 0 view .LVU111
 452 0030 0222     		movs	r2, #2
 453 0032 1192     		str	r2, [sp, #68]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 454              		.loc 1 181 3 is_stmt 1 view .LVU112
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 455              		.loc 1 181 35 is_stmt 0 view .LVU113
 456 0034 1293     		str	r3, [sp, #72]
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 457              		.loc 1 182 3 is_stmt 1 view .LVU114
ARM GAS  /tmp/ccXnUfbb.s 			page 18


 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 458              		.loc 1 182 32 is_stmt 0 view .LVU115
 459 0036 4FF4E013 		mov	r3, #1835008
 460 003a 1393     		str	r3, [sp, #76]
 183:Core/Src/main.c ****     Error_Handler();
 461              		.loc 1 183 3 is_stmt 1 view .LVU116
 183:Core/Src/main.c ****     Error_Handler();
 462              		.loc 1 183 7 is_stmt 0 view .LVU117
 463 003c 0AA8     		add	r0, sp, #40
 464 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 465              	.LVL19:
 183:Core/Src/main.c ****     Error_Handler();
 466              		.loc 1 183 6 view .LVU118
 467 0042 C0B9     		cbnz	r0, .L30
 189:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 468              		.loc 1 189 3 is_stmt 1 view .LVU119
 189:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 469              		.loc 1 189 31 is_stmt 0 view .LVU120
 470 0044 0F23     		movs	r3, #15
 471 0046 0593     		str	r3, [sp, #20]
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 472              		.loc 1 191 3 is_stmt 1 view .LVU121
 191:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 473              		.loc 1 191 34 is_stmt 0 view .LVU122
 474 0048 0221     		movs	r1, #2
 475 004a 0691     		str	r1, [sp, #24]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 476              		.loc 1 192 3 is_stmt 1 view .LVU123
 192:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 477              		.loc 1 192 35 is_stmt 0 view .LVU124
 478 004c 0023     		movs	r3, #0
 479 004e 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 480              		.loc 1 193 3 is_stmt 1 view .LVU125
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 481              		.loc 1 193 36 is_stmt 0 view .LVU126
 482 0050 4FF48062 		mov	r2, #1024
 483 0054 0892     		str	r2, [sp, #32]
 194:Core/Src/main.c **** 
 484              		.loc 1 194 3 is_stmt 1 view .LVU127
 194:Core/Src/main.c **** 
 485              		.loc 1 194 36 is_stmt 0 view .LVU128
 486 0056 0993     		str	r3, [sp, #36]
 196:Core/Src/main.c ****     Error_Handler();
 487              		.loc 1 196 3 is_stmt 1 view .LVU129
 196:Core/Src/main.c ****     Error_Handler();
 488              		.loc 1 196 7 is_stmt 0 view .LVU130
 489 0058 05A8     		add	r0, sp, #20
 490 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 491              	.LVL20:
 196:Core/Src/main.c ****     Error_Handler();
 492              		.loc 1 196 6 view .LVU131
 493 005e 60B9     		cbnz	r0, .L31
 199:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 494              		.loc 1 199 3 is_stmt 1 view .LVU132
 199:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 495              		.loc 1 199 38 is_stmt 0 view .LVU133
ARM GAS  /tmp/ccXnUfbb.s 			page 19


 496 0060 1023     		movs	r3, #16
 497 0062 0193     		str	r3, [sp, #4]
 200:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 498              		.loc 1 200 3 is_stmt 1 view .LVU134
 200:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 499              		.loc 1 200 35 is_stmt 0 view .LVU135
 500 0064 0023     		movs	r3, #0
 501 0066 0493     		str	r3, [sp, #16]
 201:Core/Src/main.c ****     Error_Handler();
 502              		.loc 1 201 3 is_stmt 1 view .LVU136
 201:Core/Src/main.c ****     Error_Handler();
 503              		.loc 1 201 7 is_stmt 0 view .LVU137
 504 0068 01A8     		add	r0, sp, #4
 505 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 506              	.LVL21:
 201:Core/Src/main.c ****     Error_Handler();
 507              		.loc 1 201 6 view .LVU138
 508 006e 30B9     		cbnz	r0, .L32
 204:Core/Src/main.c **** 
 509              		.loc 1 204 1 view .LVU139
 510 0070 15B0     		add	sp, sp, #84
 511              	.LCFI9:
 512              		.cfi_remember_state
 513              		.cfi_def_cfa_offset 4
 514              		@ sp needed
 515 0072 5DF804FB 		ldr	pc, [sp], #4
 516              	.L30:
 517              	.LCFI10:
 518              		.cfi_restore_state
 184:Core/Src/main.c ****   }
 519              		.loc 1 184 5 is_stmt 1 view .LVU140
 520 0076 FFF7FEFF 		bl	Error_Handler
 521              	.LVL22:
 522              	.L31:
 197:Core/Src/main.c ****   }
 523              		.loc 1 197 5 view .LVU141
 524 007a FFF7FEFF 		bl	Error_Handler
 525              	.LVL23:
 526              	.L32:
 202:Core/Src/main.c ****   }
 527              		.loc 1 202 5 view .LVU142
 528 007e FFF7FEFF 		bl	Error_Handler
 529              	.LVL24:
 530              		.cfi_endproc
 531              	.LFE74:
 533              		.section	.text.main,"ax",%progbits
 534              		.align	1
 535              		.global	main
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	main:
 541              	.LFB73:
 136:Core/Src/main.c ****   // Initialization
 542              		.loc 1 136 16 view -0
 543              		.cfi_startproc
 544              		@ Volatile: function does not return.
ARM GAS  /tmp/ccXnUfbb.s 			page 20


 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 08B5     		push	{r3, lr}
 548              	.LCFI11:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 3, -8
 551              		.cfi_offset 14, -4
 138:Core/Src/main.c ****   SystemClock_Config();
 552              		.loc 1 138 3 view .LVU144
 553 0002 FFF7FEFF 		bl	HAL_Init
 554              	.LVL25:
 139:Core/Src/main.c ****   MX_GPIO_Init();
 555              		.loc 1 139 3 view .LVU145
 556 0006 FFF7FEFF 		bl	SystemClock_Config
 557              	.LVL26:
 140:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 558              		.loc 1 140 3 view .LVU146
 559 000a FFF7FEFF 		bl	MX_GPIO_Init
 560              	.LVL27:
 141:Core/Src/main.c ****   MX_I2C1_Init();
 561              		.loc 1 141 3 view .LVU147
 562 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 563              	.LVL28:
 142:Core/Src/main.c ****   ssd1306_Init();
 564              		.loc 1 142 3 view .LVU148
 565 0012 FFF7FEFF 		bl	MX_I2C1_Init
 566              	.LVL29:
 143:Core/Src/main.c **** 
 567              		.loc 1 143 3 view .LVU149
 568 0016 FFF7FEFF 		bl	ssd1306_Init
 569              	.LVL30:
 145:Core/Src/main.c ****   check_keys_task_init();
 570              		.loc 1 145 3 view .LVU150
 571 001a FFF7FEFF 		bl	osKernelInitialize
 572              	.LVL31:
 146:Core/Src/main.c ****   usb_send_task_init();
 573              		.loc 1 146 3 view .LVU151
 574 001e FFF7FEFF 		bl	check_keys_task_init
 575              	.LVL32:
 147:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL,
 576              		.loc 1 147 3 view .LVU152
 577 0022 FFF7FEFF 		bl	usb_send_task_init
 578              	.LVL33:
 154:Core/Src/main.c **** 
 579              		.loc 1 154 3 view .LVU153
 580 0026 FFF7FEFF 		bl	osKernelStart
 581              	.LVL34:
 582              	.L34:
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 583              		.loc 1 156 3 discriminator 1 view .LVU154
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 584              		.loc 1 160 3 discriminator 1 view .LVU155
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 585              		.loc 1 156 9 discriminator 1 view .LVU156
 586 002a FEE7     		b	.L34
 587              		.cfi_endproc
 588              	.LFE73:
ARM GAS  /tmp/ccXnUfbb.s 			page 21


 590              		.global	keyboar_commands
 591              		.section	.bss.keyboar_commands,"aw",%nobits
 592              		.align	2
 595              	keyboar_commands:
 596 0000 00000000 		.space	8
 596      00000000 
 597              		.global	buffer
 598              		.section	.bss.buffer,"aw",%nobits
 599              		.align	2
 602              	buffer:
 603 0000 00000000 		.space	8
 603      00000000 
 604              		.global	defaultTask_attributes
 605              		.section	.rodata.str1.4,"aMS",%progbits,1
 606              		.align	2
 607              	.LC0:
 608 0000 64656661 		.ascii	"defaultTask\000"
 608      756C7454 
 608      61736B00 
 609              		.section	.rodata.defaultTask_attributes,"a"
 610              		.align	2
 613              	defaultTask_attributes:
 614 0000 00000000 		.word	.LC0
 615 0004 00000000 		.space	16
 615      00000000 
 615      00000000 
 615      00000000 
 616 0014 00020000 		.word	512
 617 0018 18000000 		.word	24
 618 001c 00000000 		.space	8
 618      00000000 
 619              		.global	defaultTaskHandle
 620              		.section	.bss.defaultTaskHandle,"aw",%nobits
 621              		.align	2
 624              	defaultTaskHandle:
 625 0000 00000000 		.space	4
 626              		.global	hi2c1
 627              		.section	.bss.hi2c1,"aw",%nobits
 628              		.align	2
 631              	hi2c1:
 632 0000 00000000 		.space	84
 632      00000000 
 632      00000000 
 632      00000000 
 632      00000000 
 633              		.text
 634              	.Letext0:
 635              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 636              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 637              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 638              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 639              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 640              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 641              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 642              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 643              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 644              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
ARM GAS  /tmp/ccXnUfbb.s 			page 22


 645              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 646              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 647              		.file 15 "Drivers/usb_send/usb_send.h"
 648              		.file 16 "Drivers/ssd1306/ssd1306.h"
 649              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 650              		.file 18 "Drivers/keyboard/check_keys.h"
 651              		.file 19 "USB_DEVICE/App/usb_device.h"
 652              		.file 20 "Middlewares/ST/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
 653              		.file 21 "<built-in>"
ARM GAS  /tmp/ccXnUfbb.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXnUfbb.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccXnUfbb.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccXnUfbb.s:144    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/ccXnUfbb.s:151    .text.test_task:0000000000000000 $t
     /tmp/ccXnUfbb.s:157    .text.test_task:0000000000000000 test_task
     /tmp/ccXnUfbb.s:209    .text.test_task:0000000000000034 $d
     /tmp/ccXnUfbb.s:602    .bss.buffer:0000000000000000 buffer
     /tmp/ccXnUfbb.s:215    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccXnUfbb.s:221    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccXnUfbb.s:250    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccXnUfbb.s:256    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccXnUfbb.s:290    .text.Error_Handler:0000000000000000 $t
     /tmp/ccXnUfbb.s:296    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccXnUfbb.s:328    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccXnUfbb.s:333    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccXnUfbb.s:391    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccXnUfbb.s:631    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccXnUfbb.s:398    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXnUfbb.s:404    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXnUfbb.s:534    .text.main:0000000000000000 $t
     /tmp/ccXnUfbb.s:540    .text.main:0000000000000000 main
     /tmp/ccXnUfbb.s:595    .bss.keyboar_commands:0000000000000000 keyboar_commands
     /tmp/ccXnUfbb.s:592    .bss.keyboar_commands:0000000000000000 $d
     /tmp/ccXnUfbb.s:599    .bss.buffer:0000000000000000 $d
     /tmp/ccXnUfbb.s:613    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccXnUfbb.s:606    .rodata.str1.4:0000000000000000 $d
     /tmp/ccXnUfbb.s:610    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccXnUfbb.s:624    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccXnUfbb.s:621    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccXnUfbb.s:628    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
USBD_HID_SendReport
HAL_Delay
hUsbDeviceFS
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
ssd1306_Init
osKernelInitialize
check_keys_task_init
usb_send_task_init
osKernelStart
