ARM GAS  /tmp/ccckIqfK.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB76:
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include "FreeRTOS.h"
   3:Core/Src/main.c **** #include "check_keys.h"
   4:Core/Src/main.c **** #include "cmsis_os.h"
   5:Core/Src/main.c **** #include "left.h"
   6:Core/Src/main.c **** #include "portmacro.h"
   7:Core/Src/main.c **** #include "rigth.h"
   8:Core/Src/main.c **** #include "ssd1306.h"
   9:Core/Src/main.c **** #include "stm32f1xx_hal.h"
  10:Core/Src/main.c **** #include "task.h"
  11:Core/Src/main.c **** #include "usb_device.h"
  12:Core/Src/main.c **** #include "usb_send.h"
  13:Core/Src/main.c **** #include "usbd_def.h"
  14:Core/Src/main.c **** #include "usbd_hid.h"
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** /* Definitions for defaultTask */
  19:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  20:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  21:Core/Src/main.c ****     .name = "defaultTask",
  22:Core/Src/main.c ****     .stack_size = 128 * 4,
  23:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  24:Core/Src/main.c **** };
  25:Core/Src/main.c **** /* USER CODE BEGIN PV */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END PV */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/main.c **** void SystemClock_Config(void);
  31:Core/Src/main.c **** static void MX_GPIO_Init(void);
  32:Core/Src/main.c **** static void MX_I2C1_Init(void);
  33:Core/Src/main.c **** void StartDefaultTask(void *argument);
ARM GAS  /tmp/ccckIqfK.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PFP */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** typedef struct {
  45:Core/Src/main.c ****   uint8_t MODIFIER;
  46:Core/Src/main.c ****   uint8_t RESERVED;
  47:Core/Src/main.c ****   uint8_t KEYCODE0;
  48:Core/Src/main.c ****   uint8_t KEYCODE1;
  49:Core/Src/main.c ****   uint8_t KEYCODE2;
  50:Core/Src/main.c ****   uint8_t KEYCODE3;
  51:Core/Src/main.c ****   uint8_t KEYCODE4;
  52:Core/Src/main.c ****   uint8_t KEYCODE5;
  53:Core/Src/main.c **** } keyboardBuffer;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* extern QueueHandle_t usb_send_queue; */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** keyboardBuffer buffer = {0, 0, 0, 0, 0, 0, 0, 0};
  58:Core/Src/main.c **** keyboard_command_t keyboard_commands_to_send;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****  * @brief  The application entry point.
  69:Core/Src/main.c ****  * @retval int
  70:Core/Src/main.c ****  */
  71:Core/Src/main.c **** //test the keys of the keyboard abnt2
  72:Core/Src/main.c **** void test_task(void *vparams) {
  73:Core/Src/main.c **** 	buffer.KEYCODE0 = 0 ;
  74:Core/Src/main.c **** 	extern USBD_HandleTypeDef hUsbDeviceFS;
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   while (1) {
  77:Core/Src/main.c ****     vTaskDelay(8000 / portTICK_PERIOD_MS);
  78:Core/Src/main.c **** 		for(int i=0; i <255; i++){
  79:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
  80:Core/Src/main.c **** 			
  81:Core/Src/main.c ****       USBD_HID_SendReport(&hUsbDeviceFS, &buffer,
  82:Core/Src/main.c ****                           sizeof(keyboard_command_t));
  83:Core/Src/main.c ****       vTaskDelay(80 / portTICK_PERIOD_MS);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** 			buffer.KEYCODE0 = 0;
  86:Core/Src/main.c ****       USBD_HID_SendReport(&hUsbDeviceFS, &buffer,
  87:Core/Src/main.c ****                           sizeof(keyboard_command_t));
  88:Core/Src/main.c ****       vTaskDelay(80 / portTICK_PERIOD_MS);
  89:Core/Src/main.c **** 		}
  90:Core/Src/main.c ****   }
ARM GAS  /tmp/ccckIqfK.s 			page 3


  91:Core/Src/main.c **** }
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /**
  96:Core/Src/main.c ****  * @brief  The application entry point.
  97:Core/Src/main.c ****  * @retval int
  98:Core/Src/main.c ****  */
  99:Core/Src/main.c **** int main(void) {
 100:Core/Src/main.c ****   // Initialization
 101:Core/Src/main.c ****   HAL_Init();
 102:Core/Src/main.c ****   SystemClock_Config();
 103:Core/Src/main.c ****   MX_GPIO_Init();
 104:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 105:Core/Src/main.c ****   MX_I2C1_Init();
 106:Core/Src/main.c ****   ssd1306_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   osKernelInitialize();
 109:Core/Src/main.c ****   check_keys_task_init();
 110:Core/Src/main.c ****   usb_send_task_init();
 111:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, */
 112:Core/Src/main.c ****   /* &defaultTask_attributes); */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 115:Core/Src/main.c ****   /* xTaskCreate(&test_task, "Test_task", 100, NULL, 15, NULL); */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   osKernelStart();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   while (1) {
 120:Core/Src/main.c ****     /* USER CODE END WHILE */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c ****   /* USER CODE END 3 */
 125:Core/Src/main.c **** }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /**
 128:Core/Src/main.c ****  * @brief System Clock Configuration
 129:Core/Src/main.c ****  * @retval None
 130:Core/Src/main.c ****  */
 131:Core/Src/main.c **** void SystemClock_Config(void) {
 132:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 133:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 137:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 138:Core/Src/main.c ****    */
 139:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 147:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccckIqfK.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 151:Core/Src/main.c ****    */
 152:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 153:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 163:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c **** }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /**
 170:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 171:Core/Src/main.c ****  * @param None
 172:Core/Src/main.c ****  * @retval None
 173:Core/Src/main.c ****  */
 174:Core/Src/main.c **** static void MX_I2C1_Init(void) {
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 183:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 184:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 185:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 186:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 187:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 188:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 189:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 190:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 191:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 192:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /**
 201:Core/Src/main.c ****  * @brief GPIO Initialization Function
 202:Core/Src/main.c ****  * @param None
 203:Core/Src/main.c ****  * @retval None
 204:Core/Src/main.c ****  */
ARM GAS  /tmp/ccckIqfK.s 			page 5


 205:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 205 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 206:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 206 3 view .LVU1
  40              		.loc 1 206 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 209:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 209 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 209 3 view .LVU4
  49              		.loc 1 209 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 209 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 209 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 209 3 view .LVU8
 210:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 210 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 210 3 view .LVU10
  65              		.loc 1 210 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 210 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F00402 		and	r2, r2, #4
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 210 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 210 3 view .LVU14
ARM GAS  /tmp/ccckIqfK.s 			page 6


 211:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 211 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 211 3 view .LVU16
  80              		.loc 1 211 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 211 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00803 		and	r3, r3, #8
  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 211 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 211 3 view .LVU20
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 214:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB,
  92              		.loc 1 214 3 view .LVU21
  93 0046 104D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF21801 		movw	r1, #61464
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 215:Core/Src/main.c ****                     Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin |
 216:Core/Src/main.c ****                         Col_5_Pin,
 217:Core/Src/main.c ****                     GPIO_PIN_RESET);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /*Configure GPIO pins : Row_0_Pin Row_1_Pin Row_2_Pin Row_3_Pin
 220:Core/Src/main.c ****                            Row_4_Pin */
 221:Core/Src/main.c ****   GPIO_InitStruct.Pin =
  99              		.loc 1 221 3 view .LVU22
 100              		.loc 1 221 23 is_stmt 0 view .LVU23
 101 0054 48F20333 		movw	r3, #33539
 102 0058 0493     		str	r3, [sp, #16]
 222:Core/Src/main.c ****       Row_0_Pin | Row_1_Pin | Row_2_Pin | Row_3_Pin | Row_4_Pin;
 223:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 103              		.loc 1 223 3 is_stmt 1 view .LVU24
 104              		.loc 1 223 24 is_stmt 0 view .LVU25
 105 005a 0594     		str	r4, [sp, #20]
 224:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 106              		.loc 1 224 3 is_stmt 1 view .LVU26
 107              		.loc 1 224 24 is_stmt 0 view .LVU27
 108 005c 0223     		movs	r3, #2
 109 005e 0693     		str	r3, [sp, #24]
 225:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 110              		.loc 1 225 3 is_stmt 1 view .LVU28
 111 0060 04A9     		add	r1, sp, #16
 112 0062 0A48     		ldr	r0, .L3+8
 113 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL1:
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /*Configure GPIO pins : Col_0_Pin Col_1_Pin Col_2_Pin Col_3_Pin
 228:Core/Src/main.c ****                            Col_4_Pin Col_5_Pin */
 229:Core/Src/main.c ****   GPIO_InitStruct.Pin =
ARM GAS  /tmp/ccckIqfK.s 			page 7


 115              		.loc 1 229 3 view .LVU29
 116              		.loc 1 229 23 is_stmt 0 view .LVU30
 117 0068 4FF21803 		movw	r3, #61464
 118 006c 0493     		str	r3, [sp, #16]
 230:Core/Src/main.c ****       Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin | Col_5_Pin;
 231:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 231 3 is_stmt 1 view .LVU31
 120              		.loc 1 231 24 is_stmt 0 view .LVU32
 121 006e 0123     		movs	r3, #1
 122 0070 0593     		str	r3, [sp, #20]
 232:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 232 3 is_stmt 1 view .LVU33
 124              		.loc 1 232 24 is_stmt 0 view .LVU34
 125 0072 0694     		str	r4, [sp, #24]
 233:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 126              		.loc 1 233 3 is_stmt 1 view .LVU35
 127              		.loc 1 233 25 is_stmt 0 view .LVU36
 128 0074 0323     		movs	r3, #3
 129 0076 0793     		str	r3, [sp, #28]
 234:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 130              		.loc 1 234 3 is_stmt 1 view .LVU37
 131 0078 04A9     		add	r1, sp, #16
 132 007a 2846     		mov	r0, r5
 133 007c FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL2:
 235:Core/Src/main.c **** }
 135              		.loc 1 235 1 is_stmt 0 view .LVU38
 136 0080 09B0     		add	sp, sp, #36
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 0082 30BD     		pop	{r4, r5, pc}
 141              	.L4:
 142              		.align	2
 143              	.L3:
 144 0084 00100240 		.word	1073876992
 145 0088 000C0140 		.word	1073810432
 146 008c 00080140 		.word	1073809408
 147              		.cfi_endproc
 148              	.LFE76:
 150              		.section	.text.test_task,"ax",%progbits
 151              		.align	1
 152              		.global	test_task
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	test_task:
 158              	.LVL3:
 159              	.LFB72:
  72:Core/Src/main.c **** 	buffer.KEYCODE0 = 0 ;
 160              		.loc 1 72 31 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/main.c **** 	buffer.KEYCODE0 = 0 ;
 164              		.loc 1 72 31 is_stmt 0 view .LVU40
 165 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccckIqfK.s 			page 8


 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 	extern USBD_HandleTypeDef hUsbDeviceFS;
 172              		.loc 1 73 2 is_stmt 1 view .LVU41
  73:Core/Src/main.c **** 	extern USBD_HandleTypeDef hUsbDeviceFS;
 173              		.loc 1 73 18 is_stmt 0 view .LVU42
 174 0002 114B     		ldr	r3, .L10
 175 0004 0022     		movs	r2, #0
 176 0006 9A70     		strb	r2, [r3, #2]
 177 0008 17E0     		b	.L8
 178              	.LVL4:
 179              	.L7:
 180              	.LBB7:
  79:Core/Src/main.c **** 			
 181              		.loc 1 79 4 is_stmt 1 discriminator 3 view .LVU43
  79:Core/Src/main.c **** 			
 182              		.loc 1 79 20 is_stmt 0 discriminator 3 view .LVU44
 183 000a 0F4C     		ldr	r4, .L10
 184 000c A570     		strb	r5, [r4, #2]
  81:Core/Src/main.c ****                           sizeof(keyboard_command_t));
 185              		.loc 1 81 7 is_stmt 1 discriminator 3 view .LVU45
 186 000e 0F4E     		ldr	r6, .L10+4
 187 0010 0822     		movs	r2, #8
 188 0012 2146     		mov	r1, r4
 189 0014 3046     		mov	r0, r6
 190 0016 FFF7FEFF 		bl	USBD_HID_SendReport
 191              	.LVL5:
  83:Core/Src/main.c **** 
 192              		.loc 1 83 7 discriminator 3 view .LVU46
 193 001a 5020     		movs	r0, #80
 194 001c FFF7FEFF 		bl	vTaskDelay
 195              	.LVL6:
  85:Core/Src/main.c ****       USBD_HID_SendReport(&hUsbDeviceFS, &buffer,
 196              		.loc 1 85 4 discriminator 3 view .LVU47
  85:Core/Src/main.c ****       USBD_HID_SendReport(&hUsbDeviceFS, &buffer,
 197              		.loc 1 85 20 is_stmt 0 discriminator 3 view .LVU48
 198 0020 0023     		movs	r3, #0
 199 0022 A370     		strb	r3, [r4, #2]
  86:Core/Src/main.c ****                           sizeof(keyboard_command_t));
 200              		.loc 1 86 7 is_stmt 1 discriminator 3 view .LVU49
 201 0024 0822     		movs	r2, #8
 202 0026 2146     		mov	r1, r4
 203 0028 3046     		mov	r0, r6
 204 002a FFF7FEFF 		bl	USBD_HID_SendReport
 205              	.LVL7:
  88:Core/Src/main.c **** 		}
 206              		.loc 1 88 7 discriminator 3 view .LVU50
 207 002e 5020     		movs	r0, #80
 208 0030 FFF7FEFF 		bl	vTaskDelay
 209              	.LVL8:
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 210              		.loc 1 78 25 discriminator 3 view .LVU51
 211 0034 0135     		adds	r5, r5, #1
ARM GAS  /tmp/ccckIqfK.s 			page 9


 212              	.LVL9:
 213              	.L6:
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 214              		.loc 1 78 18 discriminator 1 view .LVU52
 215 0036 FE2D     		cmp	r5, #254
 216 0038 E7DD     		ble	.L7
 217              	.LVL10:
 218              	.L8:
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 219              		.loc 1 78 18 is_stmt 0 discriminator 1 view .LVU53
 220              	.LBE7:
  74:Core/Src/main.c **** 
 221              		.loc 1 74 2 is_stmt 1 view .LVU54
  76:Core/Src/main.c ****     vTaskDelay(8000 / portTICK_PERIOD_MS);
 222              		.loc 1 76 3 view .LVU55
  77:Core/Src/main.c **** 		for(int i=0; i <255; i++){
 223              		.loc 1 77 5 view .LVU56
 224 003a 4FF4FA50 		mov	r0, #8000
 225 003e FFF7FEFF 		bl	vTaskDelay
 226              	.LVL11:
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 227              		.loc 1 78 3 view .LVU57
 228              	.LBB8:
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 229              		.loc 1 78 7 view .LVU58
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 230              		.loc 1 78 11 is_stmt 0 view .LVU59
 231 0042 0025     		movs	r5, #0
  78:Core/Src/main.c **** 			buffer.KEYCODE0 = i;
 232              		.loc 1 78 3 view .LVU60
 233 0044 F7E7     		b	.L6
 234              	.L11:
 235 0046 00BF     		.align	2
 236              	.L10:
 237 0048 00000000 		.word	buffer
 238 004c 00000000 		.word	hUsbDeviceFS
 239              	.LBE8:
 240              		.cfi_endproc
 241              	.LFE72:
 243              		.section	.text.StartDefaultTask,"ax",%progbits
 244              		.align	1
 245              		.global	StartDefaultTask
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	StartDefaultTask:
 251              	.LVL12:
 252              	.LFB77:
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** /* USER CODE END 4 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****  * @brief  Function implementing the defaultTask thread.
 244:Core/Src/main.c ****  * @param  argument: Not used
ARM GAS  /tmp/ccckIqfK.s 			page 10


 245:Core/Src/main.c ****  * @retval None
 246:Core/Src/main.c ****  */
 247:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 248:Core/Src/main.c **** void StartDefaultTask(void *argument) {
 253              		.loc 1 248 39 is_stmt 1 view -0
 254              		.cfi_startproc
 255              		@ Volatile: function does not return.
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		.loc 1 248 39 is_stmt 0 view .LVU62
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 249:Core/Src/main.c ****   /* init code for USB_DEVICE */
 250:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 264              		.loc 1 250 3 is_stmt 1 view .LVU63
 265 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 266              	.LVL13:
 267              	.L13:
 251:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 252:Core/Src/main.c ****   /* Infinite loop */
 253:Core/Src/main.c ****   for (;;) {
 268              		.loc 1 253 3 discriminator 1 view .LVU64
 254:Core/Src/main.c ****     osDelay(1);
 269              		.loc 1 254 5 discriminator 1 view .LVU65
 270 0006 0120     		movs	r0, #1
 271 0008 FFF7FEFF 		bl	osDelay
 272              	.LVL14:
 253:Core/Src/main.c ****     osDelay(1);
 273              		.loc 1 253 3 discriminator 1 view .LVU66
 274 000c FBE7     		b	.L13
 275              		.cfi_endproc
 276              	.LFE77:
 278              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 279              		.align	1
 280              		.global	HAL_TIM_PeriodElapsedCallback
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	HAL_TIM_PeriodElapsedCallback:
 286              	.LVL15:
 287              	.LFB78:
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c ****   /* USER CODE END 5 */
 257:Core/Src/main.c **** }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c **** /**
 260:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 261:Core/Src/main.c ****  * @note   This function is called  when TIM2 interrupt took place, inside
 262:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 263:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 264:Core/Src/main.c ****  * @param  htim : TIM handle
 265:Core/Src/main.c ****  * @retval None
 266:Core/Src/main.c ****  */
 267:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
ARM GAS  /tmp/ccckIqfK.s 			page 11


 288              		.loc 1 267 61 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		.loc 1 267 61 is_stmt 0 view .LVU68
 293 0000 08B5     		push	{r3, lr}
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 268:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 271:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 298              		.loc 1 271 3 is_stmt 1 view .LVU69
 299              		.loc 1 271 11 is_stmt 0 view .LVU70
 300 0002 0368     		ldr	r3, [r0]
 301              		.loc 1 271 6 view .LVU71
 302 0004 B3F1804F 		cmp	r3, #1073741824
 303 0008 00D0     		beq	.L18
 304              	.LVL16:
 305              	.L15:
 272:Core/Src/main.c ****     HAL_IncTick();
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 277:Core/Src/main.c **** }
 306              		.loc 1 277 1 view .LVU72
 307 000a 08BD     		pop	{r3, pc}
 308              	.LVL17:
 309              	.L18:
 272:Core/Src/main.c ****     HAL_IncTick();
 310              		.loc 1 272 5 is_stmt 1 view .LVU73
 311 000c FFF7FEFF 		bl	HAL_IncTick
 312              	.LVL18:
 313              		.loc 1 277 1 is_stmt 0 view .LVU74
 314 0010 FBE7     		b	.L15
 315              		.cfi_endproc
 316              	.LFE78:
 318              		.section	.text.Error_Handler,"ax",%progbits
 319              		.align	1
 320              		.global	Error_Handler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	Error_Handler:
 326              	.LFB79:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** /**
 280:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 281:Core/Src/main.c ****  * @retval None
 282:Core/Src/main.c ****  */
 283:Core/Src/main.c **** void Error_Handler(void) {
 327              		.loc 1 283 26 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ Volatile: function does not return.
ARM GAS  /tmp/ccckIqfK.s 			page 12


 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 284:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 285:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 286:Core/Src/main.c ****   __disable_irq();
 333              		.loc 1 286 3 view .LVU76
 334              	.LBB9:
 335              	.LBI9:
 336              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/ccckIqfK.s 			page 13


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccckIqfK.s 			page 14


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 337              		.loc 2 140 27 view .LVU77
 338              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 339              		.loc 2 142 3 view .LVU78
 340              		.syntax unified
 341              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 342 0000 72B6     		cpsid i
 343              	@ 0 "" 2
 344              		.thumb
 345              		.syntax unified
 346              	.L20:
 347              	.LBE10:
 348              	.LBE9:
 287:Core/Src/main.c ****   while (1) {
 349              		.loc 1 287 3 discriminator 1 view .LVU79
 288:Core/Src/main.c ****   }
 350              		.loc 1 288 3 discriminator 1 view .LVU80
 287:Core/Src/main.c ****   while (1) {
 351              		.loc 1 287 9 discriminator 1 view .LVU81
 352 0002 FEE7     		b	.L20
ARM GAS  /tmp/ccckIqfK.s 			page 15


 353              		.cfi_endproc
 354              	.LFE79:
 356              		.section	.text.MX_I2C1_Init,"ax",%progbits
 357              		.align	1
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	MX_I2C1_Init:
 363              	.LFB75:
 174:Core/Src/main.c **** 
 364              		.loc 1 174 32 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI6:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 183:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 373              		.loc 1 183 3 view .LVU83
 183:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 374              		.loc 1 183 18 is_stmt 0 view .LVU84
 375 0002 0A48     		ldr	r0, .L25
 376 0004 0A4B     		ldr	r3, .L25+4
 377 0006 0360     		str	r3, [r0]
 184:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 378              		.loc 1 184 3 is_stmt 1 view .LVU85
 184:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 379              		.loc 1 184 25 is_stmt 0 view .LVU86
 380 0008 0A4B     		ldr	r3, .L25+8
 381 000a 4360     		str	r3, [r0, #4]
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 382              		.loc 1 185 3 is_stmt 1 view .LVU87
 185:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 383              		.loc 1 185 24 is_stmt 0 view .LVU88
 384 000c 0023     		movs	r3, #0
 385 000e 8360     		str	r3, [r0, #8]
 186:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 386              		.loc 1 186 3 is_stmt 1 view .LVU89
 186:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 387              		.loc 1 186 26 is_stmt 0 view .LVU90
 388 0010 C360     		str	r3, [r0, #12]
 187:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 389              		.loc 1 187 3 is_stmt 1 view .LVU91
 187:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 390              		.loc 1 187 29 is_stmt 0 view .LVU92
 391 0012 4FF48042 		mov	r2, #16384
 392 0016 0261     		str	r2, [r0, #16]
 188:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 393              		.loc 1 188 3 is_stmt 1 view .LVU93
 188:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 394              		.loc 1 188 30 is_stmt 0 view .LVU94
 395 0018 4361     		str	r3, [r0, #20]
 189:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 396              		.loc 1 189 3 is_stmt 1 view .LVU95
 189:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /tmp/ccckIqfK.s 			page 16


 397              		.loc 1 189 26 is_stmt 0 view .LVU96
 398 001a 8361     		str	r3, [r0, #24]
 190:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 399              		.loc 1 190 3 is_stmt 1 view .LVU97
 190:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 400              		.loc 1 190 30 is_stmt 0 view .LVU98
 401 001c C361     		str	r3, [r0, #28]
 191:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 402              		.loc 1 191 3 is_stmt 1 view .LVU99
 191:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 403              		.loc 1 191 28 is_stmt 0 view .LVU100
 404 001e 0362     		str	r3, [r0, #32]
 192:Core/Src/main.c ****     Error_Handler();
 405              		.loc 1 192 3 is_stmt 1 view .LVU101
 192:Core/Src/main.c ****     Error_Handler();
 406              		.loc 1 192 7 is_stmt 0 view .LVU102
 407 0020 FFF7FEFF 		bl	HAL_I2C_Init
 408              	.LVL19:
 192:Core/Src/main.c ****     Error_Handler();
 409              		.loc 1 192 6 view .LVU103
 410 0024 00B9     		cbnz	r0, .L24
 198:Core/Src/main.c **** 
 411              		.loc 1 198 1 view .LVU104
 412 0026 08BD     		pop	{r3, pc}
 413              	.L24:
 193:Core/Src/main.c ****   }
 414              		.loc 1 193 5 is_stmt 1 view .LVU105
 415 0028 FFF7FEFF 		bl	Error_Handler
 416              	.LVL20:
 417              	.L26:
 418              		.align	2
 419              	.L25:
 420 002c 00000000 		.word	hi2c1
 421 0030 00540040 		.word	1073763328
 422 0034 801A0600 		.word	400000
 423              		.cfi_endproc
 424              	.LFE75:
 426              		.section	.text.SystemClock_Config,"ax",%progbits
 427              		.align	1
 428              		.global	SystemClock_Config
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	SystemClock_Config:
 434              	.LFB74:
 131:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 435              		.loc 1 131 31 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 80
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              	.LCFI7:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
 443 0002 95B0     		sub	sp, sp, #84
 444              	.LCFI8:
 445              		.cfi_def_cfa_offset 88
ARM GAS  /tmp/ccckIqfK.s 			page 17


 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 446              		.loc 1 132 3 view .LVU107
 132:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 447              		.loc 1 132 22 is_stmt 0 view .LVU108
 448 0004 2822     		movs	r2, #40
 449 0006 0021     		movs	r1, #0
 450 0008 0DEB0200 		add	r0, sp, r2
 451 000c FFF7FEFF 		bl	memset
 452              	.LVL21:
 133:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 453              		.loc 1 133 3 is_stmt 1 view .LVU109
 133:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 454              		.loc 1 133 22 is_stmt 0 view .LVU110
 455 0010 0023     		movs	r3, #0
 456 0012 0593     		str	r3, [sp, #20]
 457 0014 0693     		str	r3, [sp, #24]
 458 0016 0793     		str	r3, [sp, #28]
 459 0018 0893     		str	r3, [sp, #32]
 460 001a 0993     		str	r3, [sp, #36]
 134:Core/Src/main.c **** 
 461              		.loc 1 134 3 is_stmt 1 view .LVU111
 134:Core/Src/main.c **** 
 462              		.loc 1 134 28 is_stmt 0 view .LVU112
 463 001c 0193     		str	r3, [sp, #4]
 464 001e 0293     		str	r3, [sp, #8]
 465 0020 0393     		str	r3, [sp, #12]
 466 0022 0493     		str	r3, [sp, #16]
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 467              		.loc 1 139 3 is_stmt 1 view .LVU113
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 468              		.loc 1 139 36 is_stmt 0 view .LVU114
 469 0024 0122     		movs	r2, #1
 470 0026 0A92     		str	r2, [sp, #40]
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 471              		.loc 1 140 3 is_stmt 1 view .LVU115
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 472              		.loc 1 140 30 is_stmt 0 view .LVU116
 473 0028 4FF48033 		mov	r3, #65536
 474 002c 0B93     		str	r3, [sp, #44]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 475              		.loc 1 141 3 is_stmt 1 view .LVU117
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 476              		.loc 1 142 3 view .LVU118
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 477              		.loc 1 142 30 is_stmt 0 view .LVU119
 478 002e 0E92     		str	r2, [sp, #56]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 479              		.loc 1 143 3 is_stmt 1 view .LVU120
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 480              		.loc 1 143 34 is_stmt 0 view .LVU121
 481 0030 0222     		movs	r2, #2
 482 0032 1192     		str	r2, [sp, #68]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 483              		.loc 1 144 3 is_stmt 1 view .LVU122
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 484              		.loc 1 144 35 is_stmt 0 view .LVU123
 485 0034 1293     		str	r3, [sp, #72]
ARM GAS  /tmp/ccckIqfK.s 			page 18


 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 486              		.loc 1 145 3 is_stmt 1 view .LVU124
 145:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 487              		.loc 1 145 32 is_stmt 0 view .LVU125
 488 0036 4FF4E013 		mov	r3, #1835008
 489 003a 1393     		str	r3, [sp, #76]
 146:Core/Src/main.c ****     Error_Handler();
 490              		.loc 1 146 3 is_stmt 1 view .LVU126
 146:Core/Src/main.c ****     Error_Handler();
 491              		.loc 1 146 7 is_stmt 0 view .LVU127
 492 003c 0AA8     		add	r0, sp, #40
 493 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 494              	.LVL22:
 146:Core/Src/main.c ****     Error_Handler();
 495              		.loc 1 146 6 view .LVU128
 496 0042 C0B9     		cbnz	r0, .L32
 152:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 497              		.loc 1 152 3 is_stmt 1 view .LVU129
 152:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 498              		.loc 1 152 31 is_stmt 0 view .LVU130
 499 0044 0F23     		movs	r3, #15
 500 0046 0593     		str	r3, [sp, #20]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 501              		.loc 1 154 3 is_stmt 1 view .LVU131
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 502              		.loc 1 154 34 is_stmt 0 view .LVU132
 503 0048 0221     		movs	r1, #2
 504 004a 0691     		str	r1, [sp, #24]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 505              		.loc 1 155 3 is_stmt 1 view .LVU133
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 506              		.loc 1 155 35 is_stmt 0 view .LVU134
 507 004c 0023     		movs	r3, #0
 508 004e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 509              		.loc 1 156 3 is_stmt 1 view .LVU135
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 510              		.loc 1 156 36 is_stmt 0 view .LVU136
 511 0050 4FF48062 		mov	r2, #1024
 512 0054 0892     		str	r2, [sp, #32]
 157:Core/Src/main.c **** 
 513              		.loc 1 157 3 is_stmt 1 view .LVU137
 157:Core/Src/main.c **** 
 514              		.loc 1 157 36 is_stmt 0 view .LVU138
 515 0056 0993     		str	r3, [sp, #36]
 159:Core/Src/main.c ****     Error_Handler();
 516              		.loc 1 159 3 is_stmt 1 view .LVU139
 159:Core/Src/main.c ****     Error_Handler();
 517              		.loc 1 159 7 is_stmt 0 view .LVU140
 518 0058 05A8     		add	r0, sp, #20
 519 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 520              	.LVL23:
 159:Core/Src/main.c ****     Error_Handler();
 521              		.loc 1 159 6 view .LVU141
 522 005e 60B9     		cbnz	r0, .L33
 162:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 523              		.loc 1 162 3 is_stmt 1 view .LVU142
ARM GAS  /tmp/ccckIqfK.s 			page 19


 162:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 524              		.loc 1 162 38 is_stmt 0 view .LVU143
 525 0060 1023     		movs	r3, #16
 526 0062 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 527              		.loc 1 163 3 is_stmt 1 view .LVU144
 163:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 528              		.loc 1 163 35 is_stmt 0 view .LVU145
 529 0064 0023     		movs	r3, #0
 530 0066 0493     		str	r3, [sp, #16]
 164:Core/Src/main.c ****     Error_Handler();
 531              		.loc 1 164 3 is_stmt 1 view .LVU146
 164:Core/Src/main.c ****     Error_Handler();
 532              		.loc 1 164 7 is_stmt 0 view .LVU147
 533 0068 01A8     		add	r0, sp, #4
 534 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 535              	.LVL24:
 164:Core/Src/main.c ****     Error_Handler();
 536              		.loc 1 164 6 view .LVU148
 537 006e 30B9     		cbnz	r0, .L34
 167:Core/Src/main.c **** 
 538              		.loc 1 167 1 view .LVU149
 539 0070 15B0     		add	sp, sp, #84
 540              	.LCFI9:
 541              		.cfi_remember_state
 542              		.cfi_def_cfa_offset 4
 543              		@ sp needed
 544 0072 5DF804FB 		ldr	pc, [sp], #4
 545              	.L32:
 546              	.LCFI10:
 547              		.cfi_restore_state
 147:Core/Src/main.c ****   }
 548              		.loc 1 147 5 is_stmt 1 view .LVU150
 549 0076 FFF7FEFF 		bl	Error_Handler
 550              	.LVL25:
 551              	.L33:
 160:Core/Src/main.c ****   }
 552              		.loc 1 160 5 view .LVU151
 553 007a FFF7FEFF 		bl	Error_Handler
 554              	.LVL26:
 555              	.L34:
 165:Core/Src/main.c ****   }
 556              		.loc 1 165 5 view .LVU152
 557 007e FFF7FEFF 		bl	Error_Handler
 558              	.LVL27:
 559              		.cfi_endproc
 560              	.LFE74:
 562              		.section	.text.main,"ax",%progbits
 563              		.align	1
 564              		.global	main
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 569              	main:
 570              	.LFB73:
  99:Core/Src/main.c ****   // Initialization
 571              		.loc 1 99 16 view -0
ARM GAS  /tmp/ccckIqfK.s 			page 20


 572              		.cfi_startproc
 573              		@ Volatile: function does not return.
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576 0000 08B5     		push	{r3, lr}
 577              	.LCFI11:
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 3, -8
 580              		.cfi_offset 14, -4
 101:Core/Src/main.c ****   SystemClock_Config();
 581              		.loc 1 101 3 view .LVU154
 582 0002 FFF7FEFF 		bl	HAL_Init
 583              	.LVL28:
 102:Core/Src/main.c ****   MX_GPIO_Init();
 584              		.loc 1 102 3 view .LVU155
 585 0006 FFF7FEFF 		bl	SystemClock_Config
 586              	.LVL29:
 103:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 587              		.loc 1 103 3 view .LVU156
 588 000a FFF7FEFF 		bl	MX_GPIO_Init
 589              	.LVL30:
 104:Core/Src/main.c ****   MX_I2C1_Init();
 590              		.loc 1 104 3 view .LVU157
 591 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 592              	.LVL31:
 105:Core/Src/main.c ****   ssd1306_Init();
 593              		.loc 1 105 3 view .LVU158
 594 0012 FFF7FEFF 		bl	MX_I2C1_Init
 595              	.LVL32:
 106:Core/Src/main.c **** 
 596              		.loc 1 106 3 view .LVU159
 597 0016 FFF7FEFF 		bl	ssd1306_Init
 598              	.LVL33:
 108:Core/Src/main.c ****   check_keys_task_init();
 599              		.loc 1 108 3 view .LVU160
 600 001a FFF7FEFF 		bl	osKernelInitialize
 601              	.LVL34:
 109:Core/Src/main.c ****   usb_send_task_init();
 602              		.loc 1 109 3 view .LVU161
 603 001e FFF7FEFF 		bl	check_keys_task_init
 604              	.LVL35:
 110:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, */
 605              		.loc 1 110 3 view .LVU162
 606 0022 FFF7FEFF 		bl	usb_send_task_init
 607              	.LVL36:
 117:Core/Src/main.c **** 
 608              		.loc 1 117 3 view .LVU163
 609 0026 FFF7FEFF 		bl	osKernelStart
 610              	.LVL37:
 611              	.L36:
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 612              		.loc 1 119 3 discriminator 1 view .LVU164
 123:Core/Src/main.c ****   /* USER CODE END 3 */
 613              		.loc 1 123 3 discriminator 1 view .LVU165
 119:Core/Src/main.c ****     /* USER CODE END WHILE */
 614              		.loc 1 119 9 discriminator 1 view .LVU166
 615 002a FEE7     		b	.L36
ARM GAS  /tmp/ccckIqfK.s 			page 21


 616              		.cfi_endproc
 617              	.LFE73:
 619              		.global	keyboard_commands_to_send
 620              		.section	.bss.keyboard_commands_to_send,"aw",%nobits
 621              		.align	2
 624              	keyboard_commands_to_send:
 625 0000 00000000 		.space	8
 625      00000000 
 626              		.global	buffer
 627              		.section	.bss.buffer,"aw",%nobits
 628              		.align	2
 631              	buffer:
 632 0000 00000000 		.space	8
 632      00000000 
 633              		.global	defaultTask_attributes
 634              		.section	.rodata.str1.4,"aMS",%progbits,1
 635              		.align	2
 636              	.LC0:
 637 0000 64656661 		.ascii	"defaultTask\000"
 637      756C7454 
 637      61736B00 
 638              		.section	.rodata.defaultTask_attributes,"a"
 639              		.align	2
 642              	defaultTask_attributes:
 643 0000 00000000 		.word	.LC0
 644 0004 00000000 		.space	16
 644      00000000 
 644      00000000 
 644      00000000 
 645 0014 00020000 		.word	512
 646 0018 18000000 		.word	24
 647 001c 00000000 		.space	8
 647      00000000 
 648              		.global	defaultTaskHandle
 649              		.section	.bss.defaultTaskHandle,"aw",%nobits
 650              		.align	2
 653              	defaultTaskHandle:
 654 0000 00000000 		.space	4
 655              		.global	hi2c1
 656              		.section	.bss.hi2c1,"aw",%nobits
 657              		.align	2
 660              	hi2c1:
 661 0000 00000000 		.space	84
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.text
 663              	.Letext0:
 664              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 665              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 666              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 667              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 668              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 669              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 670              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 671              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
ARM GAS  /tmp/ccckIqfK.s 			page 22


 672              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 673              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 674              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 675              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 676              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 677              		.file 16 "Drivers/usb_send/usb_send.h"
 678              		.file 17 "Drivers/ssd1306/ssd1306.h"
 679              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 680              		.file 19 "Drivers/keyboard/check_keys.h"
 681              		.file 20 "USB_DEVICE/App/usb_device.h"
 682              		.file 21 "Middlewares/ST/STM32_USB_Device_Library/Class/HID/Inc/usbd_hid.h"
 683              		.file 22 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 684              		.file 23 "<built-in>"
ARM GAS  /tmp/ccckIqfK.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccckIqfK.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccckIqfK.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccckIqfK.s:144    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/ccckIqfK.s:151    .text.test_task:0000000000000000 $t
     /tmp/ccckIqfK.s:157    .text.test_task:0000000000000000 test_task
     /tmp/ccckIqfK.s:237    .text.test_task:0000000000000048 $d
     /tmp/ccckIqfK.s:631    .bss.buffer:0000000000000000 buffer
     /tmp/ccckIqfK.s:244    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccckIqfK.s:250    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccckIqfK.s:279    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccckIqfK.s:285    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccckIqfK.s:319    .text.Error_Handler:0000000000000000 $t
     /tmp/ccckIqfK.s:325    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccckIqfK.s:357    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccckIqfK.s:362    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccckIqfK.s:420    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccckIqfK.s:660    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccckIqfK.s:427    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccckIqfK.s:433    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccckIqfK.s:563    .text.main:0000000000000000 $t
     /tmp/ccckIqfK.s:569    .text.main:0000000000000000 main
     /tmp/ccckIqfK.s:624    .bss.keyboard_commands_to_send:0000000000000000 keyboard_commands_to_send
     /tmp/ccckIqfK.s:621    .bss.keyboard_commands_to_send:0000000000000000 $d
     /tmp/ccckIqfK.s:628    .bss.buffer:0000000000000000 $d
     /tmp/ccckIqfK.s:642    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccckIqfK.s:635    .rodata.str1.4:0000000000000000 $d
     /tmp/ccckIqfK.s:639    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccckIqfK.s:653    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccckIqfK.s:650    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccckIqfK.s:657    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
USBD_HID_SendReport
vTaskDelay
hUsbDeviceFS
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
ssd1306_Init
osKernelInitialize
check_keys_task_init
usb_send_task_init
osKernelStart
