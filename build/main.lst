ARM GAS  /tmp/cc4nNMg6.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB76:
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include "FreeRTOS.h"
   3:Core/Src/main.c **** #include "check_keys.h"
   4:Core/Src/main.c **** #include "cmsis_os.h"
   5:Core/Src/main.c **** #include "left.h"
   6:Core/Src/main.c **** #include "portmacro.h"
   7:Core/Src/main.c **** #include "rigth.h"
   8:Core/Src/main.c **** #include "ssd1306.h"
   9:Core/Src/main.c **** #include "stm32f1xx_hal.h"
  10:Core/Src/main.c **** #include "task.h"
  11:Core/Src/main.c **** #include "usb_device.h"
  12:Core/Src/main.c **** #include "usb_send.h"
  13:Core/Src/main.c **** #include "usbd_def.h"
  14:Core/Src/main.c **** #include "usbd_hid.h"
  15:Core/Src/main.c **** 
  16:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** /* Definitions for defaultTask */
  19:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  20:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  21:Core/Src/main.c ****     .name = "defaultTask",
  22:Core/Src/main.c ****     .stack_size = 128 * 4,
  23:Core/Src/main.c ****     .priority = (osPriority_t)osPriorityNormal,
  24:Core/Src/main.c **** };
  25:Core/Src/main.c **** /* USER CODE BEGIN PV */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END PV */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  30:Core/Src/main.c **** void SystemClock_Config(void);
  31:Core/Src/main.c **** static void MX_GPIO_Init(void);
  32:Core/Src/main.c **** static void MX_I2C1_Init(void);
  33:Core/Src/main.c **** void StartDefaultTask(void *argument);
ARM GAS  /tmp/cc4nNMg6.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PFP */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** typedef struct {
  45:Core/Src/main.c ****   uint8_t MODIFIER;
  46:Core/Src/main.c ****   uint8_t RESERVED;
  47:Core/Src/main.c ****   uint8_t KEYCODE0;
  48:Core/Src/main.c ****   uint8_t KEYCODE1;
  49:Core/Src/main.c ****   uint8_t KEYCODE2;
  50:Core/Src/main.c ****   uint8_t KEYCODE3;
  51:Core/Src/main.c ****   uint8_t KEYCODE4;
  52:Core/Src/main.c ****   uint8_t KEYCODE5;
  53:Core/Src/main.c **** } keyboardBuffer;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* extern QueueHandle_t usb_send_queue; */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** keyboardBuffer buffer = {0, 0, 0, 0, 0, 0, 0, 0};
  58:Core/Src/main.c **** keyboard_command_t keyboard_commands_to_send;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****  * @brief  The application entry point.
  69:Core/Src/main.c ****  * @retval int
  70:Core/Src/main.c ****  */
  71:Core/Src/main.c **** void test_task(void *vparams) {
  72:Core/Src/main.c ****   while (1) {
  73:Core/Src/main.c **** 		ssd1306_Fill(White);
  74:Core/Src/main.c **** 		ssd1306_UpdateScreen();
  75:Core/Src/main.c **** 		vTaskDelay(500/ portTICK_PERIOD_MS);
  76:Core/Src/main.c **** 		ssd1306_Fill(Black);
  77:Core/Src/main.c **** 		ssd1306_UpdateScreen();
  78:Core/Src/main.c **** 		vTaskDelay(500/ portTICK_PERIOD_MS);
  79:Core/Src/main.c ****   }
  80:Core/Src/main.c **** }
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****  * @brief  The application entry point.
  86:Core/Src/main.c ****  * @retval int
  87:Core/Src/main.c ****  */
  88:Core/Src/main.c **** int main(void) {
  89:Core/Src/main.c ****   // Initialization
  90:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/cc4nNMg6.s 			page 3


  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  94:Core/Src/main.c ****   MX_I2C1_Init();
  95:Core/Src/main.c ****   ssd1306_Init();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   osKernelInitialize();
  98:Core/Src/main.c ****   check_keys_task_init();
  99:Core/Src/main.c ****   usb_send_task_init();
 100:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, */
 101:Core/Src/main.c ****   /* &defaultTask_attributes); */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 104:Core/Src/main.c ****   /* xTaskCreate(&test_task, "Test_task", 100, NULL, 5, NULL); */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   osKernelStart();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   while (1) {
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c ****   /* USER CODE END 3 */
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****  * @brief System Clock Configuration
 118:Core/Src/main.c ****  * @retval None
 119:Core/Src/main.c ****  */
 120:Core/Src/main.c **** void SystemClock_Config(void) {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 126:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 127:Core/Src/main.c ****    */
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****    */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 142:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Core/Src/main.c **** 
ARM GAS  /tmp/cc4nNMg6.s 			page 4


 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK) {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 152:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 153:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /**
 159:Core/Src/main.c ****  * @brief I2C1 Initialization Function
 160:Core/Src/main.c ****  * @param None
 161:Core/Src/main.c ****  * @retval None
 162:Core/Src/main.c ****  */
 163:Core/Src/main.c **** static void MX_I2C1_Init(void) {
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 172:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 173:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 174:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 175:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 176:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 177:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 178:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 179:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 180:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 181:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****  * @brief GPIO Initialization Function
 191:Core/Src/main.c ****  * @param None
 192:Core/Src/main.c ****  * @retval None
 193:Core/Src/main.c ****  */
 194:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 194 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
ARM GAS  /tmp/cc4nNMg6.s 			page 5


  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 195:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 195 3 view .LVU1
  40              		.loc 1 195 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 198:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 198 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 198 3 view .LVU4
  49              		.loc 1 198 3 view .LVU5
  50 000e 1D4B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 198 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 198 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 198 3 view .LVU8
 199:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 199 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 199 3 view .LVU10
  65              		.loc 1 199 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 199 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F00402 		and	r2, r2, #4
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 199 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 199 3 view .LVU14
 200:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  77              		.loc 1 200 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 200 3 view .LVU16
  80              		.loc 1 200 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00802 		orr	r2, r2, #8
  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 200 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00803 		and	r3, r3, #8
ARM GAS  /tmp/cc4nNMg6.s 			page 6


  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 200 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 200 3 view .LVU20
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 203:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB,
  92              		.loc 1 203 3 view .LVU21
  93 0046 104D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF21801 		movw	r1, #61464
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 204:Core/Src/main.c ****                     Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin |
 205:Core/Src/main.c ****                         Col_5_Pin,
 206:Core/Src/main.c ****                     GPIO_PIN_RESET);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /*Configure GPIO pins : Row_0_Pin Row_1_Pin Row_2_Pin Row_3_Pin
 209:Core/Src/main.c ****                            Row_4_Pin */
 210:Core/Src/main.c ****   GPIO_InitStruct.Pin =
  99              		.loc 1 210 3 view .LVU22
 100              		.loc 1 210 23 is_stmt 0 view .LVU23
 101 0054 48F20333 		movw	r3, #33539
 102 0058 0493     		str	r3, [sp, #16]
 211:Core/Src/main.c ****       Row_0_Pin | Row_1_Pin | Row_2_Pin | Row_3_Pin | Row_4_Pin;
 212:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 103              		.loc 1 212 3 is_stmt 1 view .LVU24
 104              		.loc 1 212 24 is_stmt 0 view .LVU25
 105 005a 0594     		str	r4, [sp, #20]
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 106              		.loc 1 213 3 is_stmt 1 view .LVU26
 107              		.loc 1 213 24 is_stmt 0 view .LVU27
 108 005c 0223     		movs	r3, #2
 109 005e 0693     		str	r3, [sp, #24]
 214:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 110              		.loc 1 214 3 is_stmt 1 view .LVU28
 111 0060 04A9     		add	r1, sp, #16
 112 0062 0A48     		ldr	r0, .L3+8
 113 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 114              	.LVL1:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /*Configure GPIO pins : Col_0_Pin Col_1_Pin Col_2_Pin Col_3_Pin
 217:Core/Src/main.c ****                            Col_4_Pin Col_5_Pin */
 218:Core/Src/main.c ****   GPIO_InitStruct.Pin =
 115              		.loc 1 218 3 view .LVU29
 116              		.loc 1 218 23 is_stmt 0 view .LVU30
 117 0068 4FF21803 		movw	r3, #61464
 118 006c 0493     		str	r3, [sp, #16]
 219:Core/Src/main.c ****       Col_0_Pin | Col_1_Pin | Col_2_Pin | Col_3_Pin | Col_4_Pin | Col_5_Pin;
 220:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 119              		.loc 1 220 3 is_stmt 1 view .LVU31
 120              		.loc 1 220 24 is_stmt 0 view .LVU32
 121 006e 0123     		movs	r3, #1
 122 0070 0593     		str	r3, [sp, #20]
 221:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/cc4nNMg6.s 			page 7


 123              		.loc 1 221 3 is_stmt 1 view .LVU33
 124              		.loc 1 221 24 is_stmt 0 view .LVU34
 125 0072 0694     		str	r4, [sp, #24]
 222:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 126              		.loc 1 222 3 is_stmt 1 view .LVU35
 127              		.loc 1 222 25 is_stmt 0 view .LVU36
 128 0074 0323     		movs	r3, #3
 129 0076 0793     		str	r3, [sp, #28]
 223:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 130              		.loc 1 223 3 is_stmt 1 view .LVU37
 131 0078 04A9     		add	r1, sp, #16
 132 007a 2846     		mov	r0, r5
 133 007c FFF7FEFF 		bl	HAL_GPIO_Init
 134              	.LVL2:
 224:Core/Src/main.c **** }
 135              		.loc 1 224 1 is_stmt 0 view .LVU38
 136 0080 09B0     		add	sp, sp, #36
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 0082 30BD     		pop	{r4, r5, pc}
 141              	.L4:
 142              		.align	2
 143              	.L3:
 144 0084 00100240 		.word	1073876992
 145 0088 000C0140 		.word	1073810432
 146 008c 00080140 		.word	1073809408
 147              		.cfi_endproc
 148              	.LFE76:
 150              		.section	.text.test_task,"ax",%progbits
 151              		.align	1
 152              		.global	test_task
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	test_task:
 158              	.LFB72:
  71:Core/Src/main.c ****   while (1) {
 159              		.loc 1 71 31 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ Volatile: function does not return.
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              	.LVL3:
  71:Core/Src/main.c ****   while (1) {
 165              		.loc 1 71 31 is_stmt 0 view .LVU40
 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
 171              	.LVL4:
 172              	.L6:
  72:Core/Src/main.c **** 		ssd1306_Fill(White);
 173              		.loc 1 72 3 is_stmt 1 discriminator 1 view .LVU41
  73:Core/Src/main.c **** 		ssd1306_UpdateScreen();
 174              		.loc 1 73 3 discriminator 1 view .LVU42
ARM GAS  /tmp/cc4nNMg6.s 			page 8


 175 0002 0120     		movs	r0, #1
 176 0004 FFF7FEFF 		bl	ssd1306_Fill
 177              	.LVL5:
  74:Core/Src/main.c **** 		vTaskDelay(500/ portTICK_PERIOD_MS);
 178              		.loc 1 74 3 discriminator 1 view .LVU43
 179 0008 FFF7FEFF 		bl	ssd1306_UpdateScreen
 180              	.LVL6:
  75:Core/Src/main.c **** 		ssd1306_Fill(Black);
 181              		.loc 1 75 3 discriminator 1 view .LVU44
 182 000c 4FF4FA70 		mov	r0, #500
 183 0010 FFF7FEFF 		bl	vTaskDelay
 184              	.LVL7:
  76:Core/Src/main.c **** 		ssd1306_UpdateScreen();
 185              		.loc 1 76 3 discriminator 1 view .LVU45
 186 0014 0020     		movs	r0, #0
 187 0016 FFF7FEFF 		bl	ssd1306_Fill
 188              	.LVL8:
  77:Core/Src/main.c **** 		vTaskDelay(500/ portTICK_PERIOD_MS);
 189              		.loc 1 77 3 discriminator 1 view .LVU46
 190 001a FFF7FEFF 		bl	ssd1306_UpdateScreen
 191              	.LVL9:
  78:Core/Src/main.c ****   }
 192              		.loc 1 78 3 discriminator 1 view .LVU47
 193 001e 4FF4FA70 		mov	r0, #500
 194 0022 FFF7FEFF 		bl	vTaskDelay
 195              	.LVL10:
  72:Core/Src/main.c **** 		ssd1306_Fill(White);
 196              		.loc 1 72 9 discriminator 1 view .LVU48
 197 0026 ECE7     		b	.L6
 198              		.cfi_endproc
 199              	.LFE72:
 201              		.section	.text.StartDefaultTask,"ax",%progbits
 202              		.align	1
 203              		.global	StartDefaultTask
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	StartDefaultTask:
 209              	.LVL11:
 210              	.LFB77:
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** /* USER CODE END 4 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****  * @brief  Function implementing the defaultTask thread.
 233:Core/Src/main.c ****  * @param  argument: Not used
 234:Core/Src/main.c ****  * @retval None
 235:Core/Src/main.c ****  */
 236:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 237:Core/Src/main.c **** void StartDefaultTask(void *argument) {
 211              		.loc 1 237 39 view -0
 212              		.cfi_startproc
 213              		@ Volatile: function does not return.
 214              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4nNMg6.s 			page 9


 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		.loc 1 237 39 is_stmt 0 view .LVU50
 217 0000 08B5     		push	{r3, lr}
 218              	.LCFI4:
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 3, -8
 221              		.cfi_offset 14, -4
 238:Core/Src/main.c ****   /* init code for USB_DEVICE */
 239:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 222              		.loc 1 239 3 is_stmt 1 view .LVU51
 223 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 224              	.LVL12:
 225              	.L9:
 240:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 241:Core/Src/main.c ****   /* Infinite loop */
 242:Core/Src/main.c ****   for (;;) {
 226              		.loc 1 242 3 discriminator 1 view .LVU52
 243:Core/Src/main.c ****     osDelay(1);
 227              		.loc 1 243 5 discriminator 1 view .LVU53
 228 0006 0120     		movs	r0, #1
 229 0008 FFF7FEFF 		bl	osDelay
 230              	.LVL13:
 242:Core/Src/main.c ****     osDelay(1);
 231              		.loc 1 242 3 discriminator 1 view .LVU54
 232 000c FBE7     		b	.L9
 233              		.cfi_endproc
 234              	.LFE77:
 236              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 237              		.align	1
 238              		.global	HAL_TIM_PeriodElapsedCallback
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	HAL_TIM_PeriodElapsedCallback:
 244              	.LVL14:
 245              	.LFB78:
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   /* USER CODE END 5 */
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 250:Core/Src/main.c ****  * @note   This function is called  when TIM2 interrupt took place, inside
 251:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 252:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 253:Core/Src/main.c ****  * @param  htim : TIM handle
 254:Core/Src/main.c ****  * @retval None
 255:Core/Src/main.c ****  */
 256:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 246              		.loc 1 256 61 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		.loc 1 256 61 is_stmt 0 view .LVU56
 251 0000 08B5     		push	{r3, lr}
 252              	.LCFI5:
 253              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc4nNMg6.s 			page 10


 254              		.cfi_offset 3, -8
 255              		.cfi_offset 14, -4
 257:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 260:Core/Src/main.c ****   if (htim->Instance == TIM2) {
 256              		.loc 1 260 3 is_stmt 1 view .LVU57
 257              		.loc 1 260 11 is_stmt 0 view .LVU58
 258 0002 0368     		ldr	r3, [r0]
 259              		.loc 1 260 6 view .LVU59
 260 0004 B3F1804F 		cmp	r3, #1073741824
 261 0008 00D0     		beq	.L14
 262              	.LVL15:
 263              	.L11:
 261:Core/Src/main.c ****     HAL_IncTick();
 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 266:Core/Src/main.c **** }
 264              		.loc 1 266 1 view .LVU60
 265 000a 08BD     		pop	{r3, pc}
 266              	.LVL16:
 267              	.L14:
 261:Core/Src/main.c ****     HAL_IncTick();
 268              		.loc 1 261 5 is_stmt 1 view .LVU61
 269 000c FFF7FEFF 		bl	HAL_IncTick
 270              	.LVL17:
 271              		.loc 1 266 1 is_stmt 0 view .LVU62
 272 0010 FBE7     		b	.L11
 273              		.cfi_endproc
 274              	.LFE78:
 276              		.section	.text.Error_Handler,"ax",%progbits
 277              		.align	1
 278              		.global	Error_Handler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	Error_Handler:
 284              	.LFB79:
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 270:Core/Src/main.c ****  * @retval None
 271:Core/Src/main.c ****  */
 272:Core/Src/main.c **** void Error_Handler(void) {
 285              		.loc 1 272 26 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ Volatile: function does not return.
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 273:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 274:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 275:Core/Src/main.c ****   __disable_irq();
 291              		.loc 1 275 3 view .LVU64
 292              	.LBB7:
ARM GAS  /tmp/cc4nNMg6.s 			page 11


 293              	.LBI7:
 294              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /tmp/cc4nNMg6.s 			page 12


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc4nNMg6.s 			page 13


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 295              		.loc 2 140 27 view .LVU65
 296              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 297              		.loc 2 142 3 view .LVU66
 298              		.syntax unified
 299              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 300 0000 72B6     		cpsid i
 301              	@ 0 "" 2
 302              		.thumb
 303              		.syntax unified
 304              	.L16:
 305              	.LBE8:
 306              	.LBE7:
 276:Core/Src/main.c ****   while (1) {
 307              		.loc 1 276 3 discriminator 1 view .LVU67
 277:Core/Src/main.c ****   }
 308              		.loc 1 277 3 discriminator 1 view .LVU68
 276:Core/Src/main.c ****   while (1) {
 309              		.loc 1 276 9 discriminator 1 view .LVU69
 310 0002 FEE7     		b	.L16
 311              		.cfi_endproc
 312              	.LFE79:
 314              		.section	.text.MX_I2C1_Init,"ax",%progbits
 315              		.align	1
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 320              	MX_I2C1_Init:
ARM GAS  /tmp/cc4nNMg6.s 			page 14


 321              	.LFB75:
 163:Core/Src/main.c **** 
 322              		.loc 1 163 32 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326 0000 08B5     		push	{r3, lr}
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 3, -8
 330              		.cfi_offset 14, -4
 172:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 331              		.loc 1 172 3 view .LVU71
 172:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 332              		.loc 1 172 18 is_stmt 0 view .LVU72
 333 0002 0A48     		ldr	r0, .L21
 334 0004 0A4B     		ldr	r3, .L21+4
 335 0006 0360     		str	r3, [r0]
 173:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 336              		.loc 1 173 3 is_stmt 1 view .LVU73
 173:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 337              		.loc 1 173 25 is_stmt 0 view .LVU74
 338 0008 0A4B     		ldr	r3, .L21+8
 339 000a 4360     		str	r3, [r0, #4]
 174:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 340              		.loc 1 174 3 is_stmt 1 view .LVU75
 174:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 341              		.loc 1 174 24 is_stmt 0 view .LVU76
 342 000c 0023     		movs	r3, #0
 343 000e 8360     		str	r3, [r0, #8]
 175:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 344              		.loc 1 175 3 is_stmt 1 view .LVU77
 175:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 345              		.loc 1 175 26 is_stmt 0 view .LVU78
 346 0010 C360     		str	r3, [r0, #12]
 176:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 347              		.loc 1 176 3 is_stmt 1 view .LVU79
 176:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 348              		.loc 1 176 29 is_stmt 0 view .LVU80
 349 0012 4FF48042 		mov	r2, #16384
 350 0016 0261     		str	r2, [r0, #16]
 177:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 351              		.loc 1 177 3 is_stmt 1 view .LVU81
 177:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 352              		.loc 1 177 30 is_stmt 0 view .LVU82
 353 0018 4361     		str	r3, [r0, #20]
 178:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 354              		.loc 1 178 3 is_stmt 1 view .LVU83
 178:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 355              		.loc 1 178 26 is_stmt 0 view .LVU84
 356 001a 8361     		str	r3, [r0, #24]
 179:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 357              		.loc 1 179 3 is_stmt 1 view .LVU85
 179:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 358              		.loc 1 179 30 is_stmt 0 view .LVU86
 359 001c C361     		str	r3, [r0, #28]
 180:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
ARM GAS  /tmp/cc4nNMg6.s 			page 15


 360              		.loc 1 180 3 is_stmt 1 view .LVU87
 180:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 361              		.loc 1 180 28 is_stmt 0 view .LVU88
 362 001e 0362     		str	r3, [r0, #32]
 181:Core/Src/main.c ****     Error_Handler();
 363              		.loc 1 181 3 is_stmt 1 view .LVU89
 181:Core/Src/main.c ****     Error_Handler();
 364              		.loc 1 181 7 is_stmt 0 view .LVU90
 365 0020 FFF7FEFF 		bl	HAL_I2C_Init
 366              	.LVL18:
 181:Core/Src/main.c ****     Error_Handler();
 367              		.loc 1 181 6 view .LVU91
 368 0024 00B9     		cbnz	r0, .L20
 187:Core/Src/main.c **** 
 369              		.loc 1 187 1 view .LVU92
 370 0026 08BD     		pop	{r3, pc}
 371              	.L20:
 182:Core/Src/main.c ****   }
 372              		.loc 1 182 5 is_stmt 1 view .LVU93
 373 0028 FFF7FEFF 		bl	Error_Handler
 374              	.LVL19:
 375              	.L22:
 376              		.align	2
 377              	.L21:
 378 002c 00000000 		.word	hi2c1
 379 0030 00540040 		.word	1073763328
 380 0034 801A0600 		.word	400000
 381              		.cfi_endproc
 382              	.LFE75:
 384              		.section	.text.SystemClock_Config,"ax",%progbits
 385              		.align	1
 386              		.global	SystemClock_Config
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	SystemClock_Config:
 392              	.LFB74:
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 393              		.loc 1 120 31 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 80
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 00B5     		push	{lr}
 398              	.LCFI7:
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 14, -4
 401 0002 95B0     		sub	sp, sp, #84
 402              	.LCFI8:
 403              		.cfi_def_cfa_offset 88
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 404              		.loc 1 121 3 view .LVU95
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 405              		.loc 1 121 22 is_stmt 0 view .LVU96
 406 0004 2822     		movs	r2, #40
 407 0006 0021     		movs	r1, #0
 408 0008 0DEB0200 		add	r0, sp, r2
 409 000c FFF7FEFF 		bl	memset
ARM GAS  /tmp/cc4nNMg6.s 			page 16


 410              	.LVL20:
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 411              		.loc 1 122 3 is_stmt 1 view .LVU97
 122:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 412              		.loc 1 122 22 is_stmt 0 view .LVU98
 413 0010 0023     		movs	r3, #0
 414 0012 0593     		str	r3, [sp, #20]
 415 0014 0693     		str	r3, [sp, #24]
 416 0016 0793     		str	r3, [sp, #28]
 417 0018 0893     		str	r3, [sp, #32]
 418 001a 0993     		str	r3, [sp, #36]
 123:Core/Src/main.c **** 
 419              		.loc 1 123 3 is_stmt 1 view .LVU99
 123:Core/Src/main.c **** 
 420              		.loc 1 123 28 is_stmt 0 view .LVU100
 421 001c 0193     		str	r3, [sp, #4]
 422 001e 0293     		str	r3, [sp, #8]
 423 0020 0393     		str	r3, [sp, #12]
 424 0022 0493     		str	r3, [sp, #16]
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 425              		.loc 1 128 3 is_stmt 1 view .LVU101
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 426              		.loc 1 128 36 is_stmt 0 view .LVU102
 427 0024 0122     		movs	r2, #1
 428 0026 0A92     		str	r2, [sp, #40]
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 429              		.loc 1 129 3 is_stmt 1 view .LVU103
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 430              		.loc 1 129 30 is_stmt 0 view .LVU104
 431 0028 4FF48033 		mov	r3, #65536
 432 002c 0B93     		str	r3, [sp, #44]
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 433              		.loc 1 130 3 is_stmt 1 view .LVU105
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 434              		.loc 1 131 3 view .LVU106
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 435              		.loc 1 131 30 is_stmt 0 view .LVU107
 436 002e 0E92     		str	r2, [sp, #56]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 437              		.loc 1 132 3 is_stmt 1 view .LVU108
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 438              		.loc 1 132 34 is_stmt 0 view .LVU109
 439 0030 0222     		movs	r2, #2
 440 0032 1192     		str	r2, [sp, #68]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 441              		.loc 1 133 3 is_stmt 1 view .LVU110
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 442              		.loc 1 133 35 is_stmt 0 view .LVU111
 443 0034 1293     		str	r3, [sp, #72]
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 444              		.loc 1 134 3 is_stmt 1 view .LVU112
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 445              		.loc 1 134 32 is_stmt 0 view .LVU113
 446 0036 4FF4E013 		mov	r3, #1835008
 447 003a 1393     		str	r3, [sp, #76]
 135:Core/Src/main.c ****     Error_Handler();
 448              		.loc 1 135 3 is_stmt 1 view .LVU114
ARM GAS  /tmp/cc4nNMg6.s 			page 17


 135:Core/Src/main.c ****     Error_Handler();
 449              		.loc 1 135 7 is_stmt 0 view .LVU115
 450 003c 0AA8     		add	r0, sp, #40
 451 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 452              	.LVL21:
 135:Core/Src/main.c ****     Error_Handler();
 453              		.loc 1 135 6 view .LVU116
 454 0042 C0B9     		cbnz	r0, .L28
 141:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 455              		.loc 1 141 3 is_stmt 1 view .LVU117
 141:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 456              		.loc 1 141 31 is_stmt 0 view .LVU118
 457 0044 0F23     		movs	r3, #15
 458 0046 0593     		str	r3, [sp, #20]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 459              		.loc 1 143 3 is_stmt 1 view .LVU119
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 460              		.loc 1 143 34 is_stmt 0 view .LVU120
 461 0048 0221     		movs	r1, #2
 462 004a 0691     		str	r1, [sp, #24]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 463              		.loc 1 144 3 is_stmt 1 view .LVU121
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 464              		.loc 1 144 35 is_stmt 0 view .LVU122
 465 004c 0023     		movs	r3, #0
 466 004e 0793     		str	r3, [sp, #28]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 467              		.loc 1 145 3 is_stmt 1 view .LVU123
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 468              		.loc 1 145 36 is_stmt 0 view .LVU124
 469 0050 4FF48062 		mov	r2, #1024
 470 0054 0892     		str	r2, [sp, #32]
 146:Core/Src/main.c **** 
 471              		.loc 1 146 3 is_stmt 1 view .LVU125
 146:Core/Src/main.c **** 
 472              		.loc 1 146 36 is_stmt 0 view .LVU126
 473 0056 0993     		str	r3, [sp, #36]
 148:Core/Src/main.c ****     Error_Handler();
 474              		.loc 1 148 3 is_stmt 1 view .LVU127
 148:Core/Src/main.c ****     Error_Handler();
 475              		.loc 1 148 7 is_stmt 0 view .LVU128
 476 0058 05A8     		add	r0, sp, #20
 477 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 478              	.LVL22:
 148:Core/Src/main.c ****     Error_Handler();
 479              		.loc 1 148 6 view .LVU129
 480 005e 60B9     		cbnz	r0, .L29
 151:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 481              		.loc 1 151 3 is_stmt 1 view .LVU130
 151:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 482              		.loc 1 151 38 is_stmt 0 view .LVU131
 483 0060 1023     		movs	r3, #16
 484 0062 0193     		str	r3, [sp, #4]
 152:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 485              		.loc 1 152 3 is_stmt 1 view .LVU132
 152:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK) {
 486              		.loc 1 152 35 is_stmt 0 view .LVU133
ARM GAS  /tmp/cc4nNMg6.s 			page 18


 487 0064 0023     		movs	r3, #0
 488 0066 0493     		str	r3, [sp, #16]
 153:Core/Src/main.c ****     Error_Handler();
 489              		.loc 1 153 3 is_stmt 1 view .LVU134
 153:Core/Src/main.c ****     Error_Handler();
 490              		.loc 1 153 7 is_stmt 0 view .LVU135
 491 0068 01A8     		add	r0, sp, #4
 492 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 493              	.LVL23:
 153:Core/Src/main.c ****     Error_Handler();
 494              		.loc 1 153 6 view .LVU136
 495 006e 30B9     		cbnz	r0, .L30
 156:Core/Src/main.c **** 
 496              		.loc 1 156 1 view .LVU137
 497 0070 15B0     		add	sp, sp, #84
 498              	.LCFI9:
 499              		.cfi_remember_state
 500              		.cfi_def_cfa_offset 4
 501              		@ sp needed
 502 0072 5DF804FB 		ldr	pc, [sp], #4
 503              	.L28:
 504              	.LCFI10:
 505              		.cfi_restore_state
 136:Core/Src/main.c ****   }
 506              		.loc 1 136 5 is_stmt 1 view .LVU138
 507 0076 FFF7FEFF 		bl	Error_Handler
 508              	.LVL24:
 509              	.L29:
 149:Core/Src/main.c ****   }
 510              		.loc 1 149 5 view .LVU139
 511 007a FFF7FEFF 		bl	Error_Handler
 512              	.LVL25:
 513              	.L30:
 154:Core/Src/main.c ****   }
 514              		.loc 1 154 5 view .LVU140
 515 007e FFF7FEFF 		bl	Error_Handler
 516              	.LVL26:
 517              		.cfi_endproc
 518              	.LFE74:
 520              		.section	.text.main,"ax",%progbits
 521              		.align	1
 522              		.global	main
 523              		.syntax unified
 524              		.thumb
 525              		.thumb_func
 527              	main:
 528              	.LFB73:
  88:Core/Src/main.c ****   // Initialization
 529              		.loc 1 88 16 view -0
 530              		.cfi_startproc
 531              		@ Volatile: function does not return.
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 08B5     		push	{r3, lr}
 535              	.LCFI11:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
ARM GAS  /tmp/cc4nNMg6.s 			page 19


 538              		.cfi_offset 14, -4
  90:Core/Src/main.c ****   SystemClock_Config();
 539              		.loc 1 90 3 view .LVU142
 540 0002 FFF7FEFF 		bl	HAL_Init
 541              	.LVL27:
  91:Core/Src/main.c ****   MX_GPIO_Init();
 542              		.loc 1 91 3 view .LVU143
 543 0006 FFF7FEFF 		bl	SystemClock_Config
 544              	.LVL28:
  92:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 545              		.loc 1 92 3 view .LVU144
 546 000a FFF7FEFF 		bl	MX_GPIO_Init
 547              	.LVL29:
  93:Core/Src/main.c ****   MX_I2C1_Init();
 548              		.loc 1 93 3 view .LVU145
 549 000e FFF7FEFF 		bl	MX_USB_DEVICE_Init
 550              	.LVL30:
  94:Core/Src/main.c ****   ssd1306_Init();
 551              		.loc 1 94 3 view .LVU146
 552 0012 FFF7FEFF 		bl	MX_I2C1_Init
 553              	.LVL31:
  95:Core/Src/main.c **** 
 554              		.loc 1 95 3 view .LVU147
 555 0016 FFF7FEFF 		bl	ssd1306_Init
 556              	.LVL32:
  97:Core/Src/main.c ****   check_keys_task_init();
 557              		.loc 1 97 3 view .LVU148
 558 001a FFF7FEFF 		bl	osKernelInitialize
 559              	.LVL33:
  98:Core/Src/main.c ****   usb_send_task_init();
 560              		.loc 1 98 3 view .LVU149
 561 001e FFF7FEFF 		bl	check_keys_task_init
 562              	.LVL34:
  99:Core/Src/main.c ****   /* defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, */
 563              		.loc 1 99 3 view .LVU150
 564 0022 FFF7FEFF 		bl	usb_send_task_init
 565              	.LVL35:
 106:Core/Src/main.c **** 
 566              		.loc 1 106 3 view .LVU151
 567 0026 FFF7FEFF 		bl	osKernelStart
 568              	.LVL36:
 569              	.L32:
 108:Core/Src/main.c ****     /* USER CODE END WHILE */
 570              		.loc 1 108 3 discriminator 1 view .LVU152
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 571              		.loc 1 112 3 discriminator 1 view .LVU153
 108:Core/Src/main.c ****     /* USER CODE END WHILE */
 572              		.loc 1 108 9 discriminator 1 view .LVU154
 573 002a FEE7     		b	.L32
 574              		.cfi_endproc
 575              	.LFE73:
 577              		.global	keyboard_commands_to_send
 578              		.section	.bss.keyboard_commands_to_send,"aw",%nobits
 579              		.align	2
 582              	keyboard_commands_to_send:
 583 0000 00000000 		.space	8
 583      00000000 
ARM GAS  /tmp/cc4nNMg6.s 			page 20


 584              		.global	buffer
 585              		.section	.bss.buffer,"aw",%nobits
 586              		.align	2
 589              	buffer:
 590 0000 00000000 		.space	8
 590      00000000 
 591              		.global	defaultTask_attributes
 592              		.section	.rodata.str1.4,"aMS",%progbits,1
 593              		.align	2
 594              	.LC0:
 595 0000 64656661 		.ascii	"defaultTask\000"
 595      756C7454 
 595      61736B00 
 596              		.section	.rodata.defaultTask_attributes,"a"
 597              		.align	2
 600              	defaultTask_attributes:
 601 0000 00000000 		.word	.LC0
 602 0004 00000000 		.space	16
 602      00000000 
 602      00000000 
 602      00000000 
 603 0014 00020000 		.word	512
 604 0018 18000000 		.word	24
 605 001c 00000000 		.space	8
 605      00000000 
 606              		.global	defaultTaskHandle
 607              		.section	.bss.defaultTaskHandle,"aw",%nobits
 608              		.align	2
 611              	defaultTaskHandle:
 612 0000 00000000 		.space	4
 613              		.global	hi2c1
 614              		.section	.bss.hi2c1,"aw",%nobits
 615              		.align	2
 618              	hi2c1:
 619 0000 00000000 		.space	84
 619      00000000 
 619      00000000 
 619      00000000 
 619      00000000 
 620              		.text
 621              	.Letext0:
 622              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 623              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 624              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 625              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 626              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 627              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 628              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 629              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 630              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 631              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 632              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 633              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 634              		.file 15 "Drivers/ssd1306/ssd1306.h"
 635              		.file 16 "Drivers/usb_send/usb_send.h"
 636              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 637              		.file 18 "Drivers/keyboard/check_keys.h"
ARM GAS  /tmp/cc4nNMg6.s 			page 21


 638              		.file 19 "USB_DEVICE/App/usb_device.h"
 639              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 640              		.file 21 "<built-in>"
ARM GAS  /tmp/cc4nNMg6.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4nNMg6.s:19     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc4nNMg6.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc4nNMg6.s:144    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/cc4nNMg6.s:151    .text.test_task:0000000000000000 $t
     /tmp/cc4nNMg6.s:157    .text.test_task:0000000000000000 test_task
     /tmp/cc4nNMg6.s:202    .text.StartDefaultTask:0000000000000000 $t
     /tmp/cc4nNMg6.s:208    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/cc4nNMg6.s:237    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc4nNMg6.s:243    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc4nNMg6.s:277    .text.Error_Handler:0000000000000000 $t
     /tmp/cc4nNMg6.s:283    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc4nNMg6.s:315    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/cc4nNMg6.s:320    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/cc4nNMg6.s:378    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/cc4nNMg6.s:618    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/cc4nNMg6.s:385    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc4nNMg6.s:391    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc4nNMg6.s:521    .text.main:0000000000000000 $t
     /tmp/cc4nNMg6.s:527    .text.main:0000000000000000 main
     /tmp/cc4nNMg6.s:582    .bss.keyboard_commands_to_send:0000000000000000 keyboard_commands_to_send
     /tmp/cc4nNMg6.s:579    .bss.keyboard_commands_to_send:0000000000000000 $d
     /tmp/cc4nNMg6.s:589    .bss.buffer:0000000000000000 buffer
     /tmp/cc4nNMg6.s:586    .bss.buffer:0000000000000000 $d
     /tmp/cc4nNMg6.s:600    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/cc4nNMg6.s:593    .rodata.str1.4:0000000000000000 $d
     /tmp/cc4nNMg6.s:597    .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/cc4nNMg6.s:611    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/cc4nNMg6.s:608    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/cc4nNMg6.s:615    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ssd1306_Fill
ssd1306_UpdateScreen
vTaskDelay
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_I2C_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
ssd1306_Init
osKernelInitialize
check_keys_task_init
usb_send_task_init
osKernelStart
